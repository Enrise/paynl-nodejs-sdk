{
  "openapi": "3.0.0",
  "info": {
    "title": "Pay. Transaction Gateway Unit API",
    "description": "The restful API for interacting with the Pay. Transaction Gateway Unit.",
    "contact": {
      "name": "Pay.",
      "url": "https://www.pay.nl",
      "email": "support@pay.nl"
    },
    "version": "1"
  },
  "servers": [
    {
      "url": "https://connect.pay.nl",
      "description": "Production Multicore"
    },
    {
      "url": "https://connect.payments.nl",
      "description": "Production Core"
    },
    {
      "url": "https://connect.achterelkebetaling.nl",
      "description": "Production Core"
    },
    {
      "url": "https://zero.pay.nl",
      "description": "Zero version Multicore"
    }
  ],
  "paths": {
    "/v1/orders": {
      "post": {
        "operationId": "api_create_order",
        "tags": [
          "Order"
        ],
        "responses": {
          "201": {
            "description": "Order created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse201Created"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Create",
        "description": "Create an order on this TGU. An order represents the total order as it exists in your shop and can be fulfilled through one or more payments.",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order.Input"
              },
              "examples": {
                "order_minimum": {
                  "$ref": "#/components/examples/OrderMinimum"
                },
                "order_extended": {
                  "$ref": "#/components/examples/OrderExtended"
                },
                "ideal_ing_order": {
                  "$ref": "#/components/examples/IdealIngOrder"
                },
                "account_funding_transaction": {
                  "$ref": "#/components/examples/AccountFundingTransaction"
                },
                "ideal_fast_checkout": {
                  "$ref": "#/components/examples/IdealFastCheckout"
                },
                "ideal_c2c": {
                  "$ref": "#/components/examples/IdealC2C"
                },
                "ideal_end2end": {
                  "$ref": "#/components/examples/IdealEnd2End"
                },
                "vvv": {
                  "$ref": "#/components/examples/VVVGiftcard"
                },
                "PayPalExpressCheckout": {
                  "$ref": "#/components/examples/PayPalExpressCheckout"
                },
                "pin": {
                  "$ref": "#/components/examples/Pin"
                },
                "dynamic_cloudpos": {
                  "$ref": "#/components/examples/DynamicCloudPos"
                },
                "static_cloudpos": {
                  "$ref": "#/components/examples/StaticCloudPos"
                },
                "directdebit": {
                  "$ref": "#/components/examples/DirectDebit"
                },
                "klarna": {
                  "$ref": "#/components/examples/Klarna"
                },
                "klarnaBusiness": {
                  "$ref": "#/components/examples/KlarnaBusiness"
                },
                "riverty": {
                  "$ref": "#/components/examples/Riverty"
                },
                "rivertyBusiness": {
                  "$ref": "#/components/examples/RivertyBusiness"
                },
                "billink": {
                  "$ref": "#/components/examples/Billink"
                },
                "billinkBusiness": {
                  "$ref": "#/components/examples/BillinkBusiness"
                },
                "in3": {
                  "$ref": "#/components/examples/In3"
                },
                "in3_business": {
                  "$ref": "#/components/examples/In3Business"
                },
                "notyd": {
                  "$ref": "#/components/examples/Notyd"
                },
                "creditclick": {
                  "$ref": "#/components/examples/Creditclick"
                },
                "p24": {
                  "$ref": "#/components/examples/P24"
                },
                "paybybank": {
                  "$ref": "#/components/examples/PayByBank"
                },
                "spraypay": {
                  "$ref": "#/components/examples/SprayPay"
                },
                "test_case_one": {
                  "$ref": "#/components/examples/TestCaseOne"
                },
                "test_case_two": {
                  "$ref": "#/components/examples/TestCaseTwo"
                },
                "test_case_three": {
                  "$ref": "#/components/examples/TestCaseThree"
                },
                "test_case_four": {
                  "$ref": "#/components/examples/TestCaseFour"
                },
                "test_case_five": {
                  "$ref": "#/components/examples/TestCaseFive"
                },
                "test_case_six": {
                  "$ref": "#/components/examples/TestCaseSix"
                },
                "test_case_seven": {
                  "$ref": "#/components/examples/TestCaseSeven"
                },
                "test_case_eight": {
                  "$ref": "#/components/examples/TestCaseEight"
                },
                "test_case_nine": {
                  "$ref": "#/components/examples/TestCaseNine"
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}": {
      "patch": {
        "operationId": "api_update_order",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200CapturedWithCheckoutDataAfterUpdate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Update",
        "description": "Update an order with a reference and/or description. This action is only allowed available for orders of the type 'payment_based_checkout' and only if the value to update is currently not set.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Order.OrderUpdateInputDto-generic.api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order.OrderUpdateInputDto-generic.api"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}/status": {
      "get": {
        "operationId": "api_get_status",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Status"
                  },
                  "captured_with_checkout_data": {
                    "$ref": "#/components/examples/OrderResponse200CapturedWithCheckoutData"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "410": {
            "$ref": "#/components/responses/Gone"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Status",
        "description": "Retrieve the current status of an order along with its corresponding payment attempts.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}/payments": {
      "post": {
        "operationId": "api_create_order_payment",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Payment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "pending": {
                    "$ref": "#/components/examples/OrderResponse200Status"
                  },
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Approve"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Order resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.OrderOutputDto-generic.api"
                }
              }
            },
            "links": {

            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Payment",
        "description": "Append a new payment based on an existing pending order. When the summed amount of all completed payments reaches the order amount, the order will be completed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order.Payment"
              },
              "examples": {
                "ideal": {
                  "$ref": "#/components/examples/order_payment_ideal"
                },
                "giftcard": {
                  "$ref": "#/components/examples/order_payment_giftcard"
                },
                "pin": {
                  "$ref": "#/components/examples/order_payment_pin"
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false,
        "security": []
      },
      "parameters": []
    },
    "/v1/orders/{id}/approve": {
      "patch": {
        "operationId": "api_approve_order",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order approved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Approve"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Approve",
        "description": "Approve an order that is flagged for a risk check by the Verify module, continuing the regular order flow.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {

              }
            },
            "application/json": {
              "schema": {

              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}/decline": {
      "patch": {
        "operationId": "api_decline_order",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order declined",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Decline"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Decline",
        "description": "Decline an order that is flagged for a risk check by the Verify module, refunding all payments made on this order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {

              }
            },
            "application/json": {
              "schema": {

              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}/capture": {
      "patch": {
        "operationId": "api_capture_order",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order captured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Capture"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Capture",
        "description": "Capture an order that has an active reservation (Status 95). Reservations are commonly used for CreditCard and Buy now, Pay later payments. By using this API, the entire order will be captured.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {

              }
            },
            "application/json": {
              "schema": {

              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}/capture/amount": {
      "patch": {
        "operationId": "api_capture_amount",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order captured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Capture"
                  },
                  "partial_success": {
                    "$ref": "#/components/examples/OrderResponse200PartialCapture"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:CaptureAmount",
        "description": "Capture a specific amount on an order that has an active reservation (Status 95). Reservations are commonly used for CreditCard and Buy now, Pay later payments. With this API, you can capture a specific amount from the order while the reservation remains active.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Order.CaptureAmountInputDto-generic.api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order.CaptureAmountInputDto-generic.api"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}/capture/products": {
      "patch": {
        "operationId": "api_capture_products",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order captured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Capture"
                  },
                  "partial_success": {
                    "$ref": "#/components/examples/OrderResponse200PartialCapture"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:CaptureProducts",
        "description": "Capture an order that has an active reservation (Status 95). Reservations are commonly used for CreditCard and Buy now, Pay later payments. By using this API, the entire order will be captured.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Order.CaptureProductsInputDto-generic.api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order.CaptureProductsInputDto-generic.api"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}/void": {
      "patch": {
        "operationId": "api_void_order",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Void"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Void",
        "description": "Cancel an order with an active reservation (Status 95), voiding all payments made for that order as well.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {

              }
            },
            "application/json": {
              "schema": {

              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/v1/orders/{id}/abort": {
      "patch": {
        "operationId": "api_abort_order",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order.Output"
                },
                "examples": {
                  "success": {
                    "$ref": "#/components/examples/OrderResponse200Abort"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "summary": "Order:Abort",
        "description": "Abort an order, halting the regular order flow and voiding any payment attempts made to fulfill this order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "9f5cc332-8cd7-4242-b9c8-51941aa12837"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {

              }
            },
            "application/json": {
              "schema": {

              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "AddressOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "firstName": {
            "example": "John",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "example": "Curieweg",
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "example": "19",
            "type": "string",
            "nullable": true
          },
          "streetNumberAddition": {
            "example": "C",
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "example": "3208 KJ",
            "type": "string",
            "nullable": true
          },
          "city": {
            "example": "Spijkenisse",
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "example": "NL",
            "type": "string",
            "nullable": true
          },
          "regionCode": {
            "example": "nl-ZH",
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddressOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "firstName": {
            "example": "John",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "example": "Curieweg",
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "example": "19",
            "type": "string",
            "nullable": true
          },
          "streetNumberAddition": {
            "example": "C",
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "example": "3208 KJ",
            "type": "string",
            "nullable": true
          },
          "city": {
            "example": "Spijkenisse",
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "example": "NL",
            "type": "string",
            "nullable": true
          },
          "regionCode": {
            "example": "nl-ZH",
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddressOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "street": {
            "example": "Dorpsstraat",
            "type": "string"
          },
          "house_number": {
            "example": "1",
            "type": "string"
          },
          "postal_code": {
            "example": "1234AB",
            "type": "string"
          },
          "city": {
            "example": "Aadorp",
            "type": "string"
          },
          "country": {
            "example": "NL",
            "type": "string",
            "nullable": true
          },
          "house_number_addition": {
            "example": "second floor",
            "type": "string",
            "nullable": true
          },
          "region": {
            "example": "NL",
            "type": "string",
            "nullable": true
          }
        }
      },
      "AmountInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value",
          "currency"
        ],
        "properties": {
          "value": {
            "description": "The amount in cents. Є1.50 becomes 150",
            "example": 1,
            "type": "integer"
          },
          "currency": {
            "externalDocs": {
              "url": "https://schema.org/priceCurrency"
            },
            "example": "EUR",
            "type": "string",
            "nullable": true
          }
        }
      },
      "AmountOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "value": {
            "example": 1,
            "type": "integer"
          },
          "currency": {
            "example": "EUR",
            "type": "string"
          },
          "currencySymbol": {
            "example": "€",
            "type": "string"
          }
        }
      },
      "AmountOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "value": {
            "example": 1,
            "type": "integer"
          },
          "currency": {
            "example": "EUR",
            "type": "string"
          }
        }
      },
      "AmountOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "value": {
            "example": 1,
            "type": "integer"
          },
          "currency": {
            "example": "EUR",
            "type": "string"
          },
          "currencySymbol": {
            "example": "€",
            "type": "string"
          }
        }
      },
      "ApplicationOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "Application name",
            "type": "string"
          },
          "version": {
            "example": "1.2.1",
            "type": "string"
          }
        }
      },
      "ApplicationOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "Application name",
            "type": "string"
          },
          "version": {
            "example": "1.2.1",
            "type": "string"
          }
        }
      },
      "CheckoutDataOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Customer",
            "description": "The customer provided by the supplier"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Address",
            "readOnly": true,
            "description": "The billing address provided by the supplier"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Address",
            "description": "The delivery address provided by the supplier"
          }
        }
      },
      "CheckoutDataOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Customer",
            "description": "The customer provided by the supplier"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Address",
            "readOnly": true,
            "description": "The billing address provided by the supplier"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Address",
            "description": "The delivery address provided by the supplier"
          }
        }
      },
      "CompanyOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "Pay.",
            "type": "string",
            "nullable": true
          },
          "cocNumber": {
            "example": "24283498",
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "example": "NL807960147B01",
            "type": "string",
            "nullable": true
          },
          "country": {
            "example": "NL",
            "type": "string",
            "nullable": true
          }
        }
      },
      "CompanyOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "Pay.",
            "type": "string",
            "nullable": true
          },
          "cocNumber": {
            "example": "24283498",
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "example": "NL807960147B01",
            "type": "string",
            "nullable": true
          },
          "country": {
            "example": "NL",
            "type": "string",
            "nullable": true
          }
        }
      },
      "CompanyOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "John Doe Farm Equipment",
            "type": "string"
          },
          "coc_number": {
            "example": "50152769",
            "type": "string",
            "nullable": true
          },
          "vat_number": {
            "example": "NL000099998B57",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContactOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "email": {
            "example": "johndoe@example.com",
            "type": "string",
            "nullable": true
          },
          "name": {
            "example": "John Doe",
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "initials": {
            "example": "J",
            "type": "string",
            "nullable": true
          },
          "date_of_birth": {
            "example": "1999-07-13",
            "type": "string",
            "nullable": true
          },
          "gender": {
            "example": "M",
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "example": "06-12345678",
            "type": "string",
            "nullable": true
          },
          "language": {
            "example": "nl",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContactOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "email": {
            "example": "johndoe@example.com",
            "type": "string",
            "nullable": true
          },
          "name": {
            "example": "John Doe",
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "initials": {
            "example": "J",
            "type": "string",
            "nullable": true
          },
          "date_of_birth": {
            "example": "1999-07-13",
            "type": "string",
            "nullable": true
          },
          "gender": {
            "example": "M",
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "example": "06-12345678",
            "type": "string",
            "nullable": true
          },
          "language": {
            "example": "nl",
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "email": {
            "example": "johndoe@example.com",
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "example": "John",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "example": "1999-11-22",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "example": "O",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "example": "06-12345678",
            "type": "string",
            "nullable": true
          },
          "locale": {
            "example": "nl_BE",
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "example": "192.168.0.1",
            "type": "string",
            "nullable": true
          },
          "reference": {
            "example": "Cstmr12",
            "type": "string",
            "nullable": true
          },
          "company": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Output.CheckoutData.Company"
              }
            ],
            "nullable": true
          }
        }
      },
      "CustomerOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "email": {
            "example": "johndoe@example.com",
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "example": "John",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "example": "1999-11-22",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "example": "O",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "example": "06-12345678",
            "type": "string",
            "nullable": true
          },
          "locale": {
            "example": "nl_BE",
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "example": "192.168.0.1",
            "type": "string",
            "nullable": true
          },
          "reference": {
            "example": "Cstmr12",
            "type": "string",
            "nullable": true
          },
          "company": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Output.CheckoutData.Company"
              }
            ],
            "nullable": true
          }
        }
      },
      "CustomerOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "email": {
            "example": "johndoe@example.com",
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "example": "John Doe",
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "date_of_birth": {
            "example": "1999-07-13",
            "type": "string",
            "nullable": true
          },
          "gender": {
            "example": "M",
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "example": "06-12345678",
            "type": "string",
            "nullable": true
          },
          "language": {
            "deprecated": true,
            "example": "nl",
            "type": "string",
            "nullable": true
          },
          "locale": {
            "example": "nl_NL",
            "type": "string",
            "nullable": true
          },
          "ip_address": {
            "example": "192.168.0.1",
            "type": "string",
            "nullable": true
          },
          "reference": {
            "example": "Your customer reference",
            "type": "string",
            "nullable": true
          },
          "gaClientId": {
            "type": "string",
            "nullable": true
          },
          "trust": {
            "example": 1,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "EnduserOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "ip_address": {
            "example": "127.0.0.1",
            "type": "string"
          },
          "accept_language": {
            "example": "en-US",
            "type": "string"
          },
          "useragent": {
            "example": "Mozilla/5.0 (Mobile; rv:17.0) Gecko/20100101 Firefox/17.0",
            "type": "string"
          }
        }
      },
      "EnduserOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "ip_address": {
            "example": "127.0.0.1",
            "type": "string"
          },
          "accept_language": {
            "example": "en-US",
            "type": "string"
          },
          "useragent": {
            "example": "Mozilla/5.0 (Mobile; rv:17.0) Gecko/20100101 Firefox/17.0",
            "type": "string"
          }
        }
      },
      "IntegrationOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "pointOfInteraction": {
            "type": "string",
            "nullable": true
          },
          "test": {
            "description": "Whether this order was created in Test Mode, defaults to false.",
            "type": "boolean"
          }
        }
      },
      "IntegrationOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "pointOfInteraction": {
            "type": "string",
            "nullable": true
          },
          "test": {
            "description": "Whether this order was created in Test Mode, defaults to false.",
            "type": "boolean"
          }
        }
      },
      "LinkOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          }
        }
      },
      "LinkOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          }
        }
      },
      "LocaleOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "acceptLanguage": {
            "type": "string"
          },
          "contentLanguage": {
            "type": "string"
          },
          "countryImageUrls": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "LocaleOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "acceptLanguage": {
            "type": "string"
          },
          "contentLanguage": {
            "type": "string"
          },
          "countryImageUrls": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "MasterSwitch": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "setting": {
            "type": "string"
          },
          "operation": {
            "type": "string",
            "enum": [
              "prepend",
              "append",
              "set",
              "remove"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "MasterSwitch.MasterSwitchInputDTO": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "paymentMethod": {
            "description": "The id of the payment method, 0 for global",
            "example": 10,
            "type": "integer"
          },
          "setting": {
            "description": "The payment setting to override",
            "example": "methodEnabled",
            "type": "string"
          },
          "operation": {
            "description": "The operation that this master switch should execute",
            "example": "set",
            "type": "string",
            "enum": [
              "prepend",
              "append",
              "set",
              "remove"
            ]
          },
          "value": {
            "description": "The value that the operation should use",
            "example": "false",
            "type": "string"
          }
        }
      },
      "MasterSwitch.MasterSwitchOutputDTO": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "The internal ID of this master switch",
            "example": 1337,
            "type": "string"
          },
          "paymentMethod": {
            "description": "The payment method for this master switch",
            "example": 10,
            "type": "integer"
          },
          "setting": {
            "description": "The setting that this master switch overrides",
            "example": "routeOrder",
            "type": "string"
          },
          "operation": {
            "description": "The operation that this master switch performs",
            "example": "remove",
            "type": "string",
            "enum": [
              "prepend",
              "append",
              "set",
              "remove"
            ]
          },
          "value": {
            "description": "The value that the operation uses",
            "example": 52,
            "type": "string"
          }
        }
      },
      "Merchant": {
        "type": "object",
        "description": "",
        "deprecated": false
      },
      "Merchant.MerchantOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "publicContacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicContactOutputDto"
            }
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantNameOutputDto"
            }
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantTokenOutputDto"
            }
          },
          "bankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantBankAccountOutputDto"
            }
          },
          "bankAccountId": {
            "type": "string",
            "nullable": true
          },
          "layoutId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MerchantAddressOutputDto"
              }
            ],
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parentMerchantId": {
            "type": "string",
            "nullable": true
          },
          "managerMerchantId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MerchantAddressOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "street": {
            "type": "string"
          },
          "houseNumber": {
            "type": "string"
          },
          "houseNumberAddition": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          }
        }
      },
      "MerchantBankAccountOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "bankAccountNumber": {
            "type": "string"
          },
          "bankAccountHolder": {
            "type": "string"
          },
          "bic": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MerchantNameOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "MerchantOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "M-3914-2321",
            "type": "string"
          },
          "name": {
            "example": "John Doe Farm Equipment",
            "type": "string"
          }
        }
      },
      "MerchantOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "M-3914-2321",
            "type": "string"
          },
          "name": {
            "example": "John Doe Farm Equipment",
            "type": "string"
          }
        }
      },
      "MerchantTokenOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "validateIp": {
            "type": "boolean"
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "Notification": {
        "type": "object",
        "description": "",
        "deprecated": false
      },
      "Notification.NotificationQueueCountOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "Order": {
        "type": "object",
        "description": "",
        "deprecated": false
      },
      "Order.CaptureAmountInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "amount": {
            "description": "The desired amount, in cents, to be captured.",
            "example": 1350,
            "type": "integer"
          }
        }
      },
      "Order.CaptureProductsInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "products"
        ],
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductQuantityInputDto-generic.api"
            }
          }
        }
      },
      "Order.CheckoutOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "payment_data": {
            "$ref": "#/components/schemas/PaymentDataOutputDto-generic.api_amount-currency-symbol"
          },
          "message": {
            "description": "You will see this message only when the enduser has return to a issuer and has not comeback to our paymentscreen to see this message.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentScreenMessageOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "order": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderCheckoutOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "styling": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StylingOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "payment_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodOutputDto-generic.api_amount-currency-symbol"
            }
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkOutputDto-generic.api_amount-currency-symbol"
            }
          },
          "supportedLocales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocaleOutputDto-generic.api_amount-currency-symbol"
            }
          }
        }
      },
      "Order.EnduserInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "ip_address"
        ],
        "properties": {
          "ip_address": {
            "format": "ipv6",
            "example": "127.0.0.1",
            "type": "string",
            "nullable": true
          },
          "accept_language": {
            "example": "en-US",
            "type": "string",
            "nullable": true
          },
          "useragent": {
            "example": "Mozilla/5.0 (Mobile; rv:17.0) Gecko/20100101 Firefox/17.0",
            "type": "string",
            "nullable": true
          },
          "locale": {
            "example": "nl_NL",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.OrderOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "The unique identifier of your order.",
            "example": "655b2da5-5223-8f32-1aee-737862302XXX",
            "type": "string"
          },
          "type": {
            "description": "The order type.",
            "example": "sale",
            "type": "string"
          },
          "serviceId": {
            "description": "The Service ID used for creating this order",
            "example": "SL-####-####",
            "type": "string"
          },
          "description": {
            "description": "The description given for this order.",
            "example": "Instore Terminal Order #27",
            "type": "string",
            "nullable": true
          },
          "reference": {
            "description": "The reference given for this order.",
            "example": "REF1234",
            "type": "string",
            "nullable": true
          },
          "manualTransferCode": {
            "description": "The manual transfer code that can be used to transfer the order amount to PAY. using a bank transfer.",
            "example": "1234 1234 1234 1234",
            "type": "string"
          },
          "orderId": {
            "description": "The order ID as you would see it within the PAY. platform.",
            "example": "52305407020X2325",
            "type": "string"
          },
          "uuid": {
            "description": "The UUID that can be used to create a QR code for this order.",
            "example": "ad0e7378-6230-2325-5230-5407020a2XXX",
            "type": "string"
          },
          "customerKey": {
            "readOnly": true,
            "description": "An identifier for the customer",
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Order.Output.Status",
            "description": "The status of the order."
          },
          "receipt": {
            "readOnly": true,
            "description": "Base64 encoded string of the receipt for this order when it's paid.",
            "example": "\u003Cbase64 string\u003E",
            "type": "string",
            "nullable": true
          },
          "integration": {
            "$ref": "#/components/schemas/Order.Output.Integration",
            "description": "Information about your integration."
          },
          "stats": {
            "$ref": "#/components/schemas/Order.Output.Stats",
            "description": "Contains the statsData object as given when the order was created."
          },
          "transferData": {
            "description": "Contains the transferData values given when the order was created.",
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "amount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount for this order."
          },
          "authorizedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of the order that is authorized."
          },
          "capturedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of the order that is captured."
          },
          "checkoutData": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Output.CheckoutData"
              }
            ],
            "readOnly": true,
            "description": "Standardized customer data provided by the supplier",
            "nullable": true
          },
          "payments": {
            "items": {
              "$ref": "#/components/schemas/Order.Output.Payment"
            },
            "readOnly": true,
            "description": "The payments that are linked to this order.",
            "type": "array"
          },
          "createdAt": {
            "description": "The date-time at which this order was created in our system.",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "description": "The API token or Service ID that created this order.",
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "description": "The date-time at which this order was modified in our system. This can be done by you or by actions taken within our order-payment flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The API token or Service ID that did the modification of the order. This can also be the TGU node that was handling the order-payment flow.",
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "description": "The date-time at which this order expires.",
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "description": "The date-time at which this order was completed. This means that all underlying payments are captured and money is guaranteed.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "links": {
            "readOnly": true,
            "description": "The links that can be used to interact with this order.",
            "example": {
              "redirect": "\u003Can_url\u003E",
              "status": "\u003Can_url\u003E",
              "cancel": "\u003Can_url\u003E"
            },
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Order.OrderOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "The unique identifier of your order.",
            "example": "655b2da5-5223-8f32-1aee-737862302XXX",
            "type": "string"
          },
          "type": {
            "description": "The order type.",
            "example": "sale",
            "type": "string"
          },
          "serviceId": {
            "description": "The Service ID used for creating this order",
            "example": "SL-####-####",
            "type": "string"
          },
          "description": {
            "description": "The description given for this order.",
            "example": "Instore Terminal Order #27",
            "type": "string",
            "nullable": true
          },
          "reference": {
            "description": "The reference given for this order.",
            "example": "REF1234",
            "type": "string",
            "nullable": true
          },
          "manualTransferCode": {
            "description": "The manual transfer code that can be used to transfer the order amount to PAY. using a bank transfer.",
            "example": "1234 1234 1234 1234",
            "type": "string"
          },
          "orderId": {
            "description": "The order ID as you would see it within the PAY. platform.",
            "example": "52305407020X2325",
            "type": "string"
          },
          "uuid": {
            "description": "The UUID that can be used to create a QR code for this order.",
            "example": "ad0e7378-6230-2325-5230-5407020a2XXX",
            "type": "string"
          },
          "customerKey": {
            "readOnly": true,
            "description": "An identifier for the customer",
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Order.Output.Status",
            "description": "The status of the order."
          },
          "receipt": {
            "readOnly": true,
            "description": "Base64 encoded string of the receipt for this order when it's paid.",
            "example": "\u003Cbase64 string\u003E",
            "type": "string",
            "nullable": true
          },
          "integration": {
            "$ref": "#/components/schemas/Order.Output.Integration",
            "description": "Information about your integration."
          },
          "stats": {
            "$ref": "#/components/schemas/Order.Output.Stats",
            "description": "Contains the statsData object as given when the order was created."
          },
          "transferData": {
            "description": "Contains the transferData values given when the order was created.",
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "amount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount for this order."
          },
          "authorizedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of the order that is authorized."
          },
          "capturedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of the order that is captured."
          },
          "checkoutData": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Output.CheckoutData"
              }
            ],
            "readOnly": true,
            "description": "Standardized customer data provided by the supplier",
            "nullable": true
          },
          "payments": {
            "items": {
              "$ref": "#/components/schemas/Order.Output.Payment"
            },
            "readOnly": true,
            "description": "The payments that are linked to this order.",
            "type": "array"
          },
          "createdAt": {
            "description": "The date-time at which this order was created in our system.",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "description": "The API token or Service ID that created this order.",
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "description": "The date-time at which this order was modified in our system. This can be done by you or by actions taken within our order-payment flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The API token or Service ID that did the modification of the order. This can also be the TGU node that was handling the order-payment flow.",
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "description": "The date-time at which this order expires.",
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "description": "The date-time at which this order was completed. This means that all underlying payments are captured and money is guaranteed.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "links": {
            "readOnly": true,
            "description": "The links that can be used to interact with this order.",
            "example": {
              "redirect": "\u003Can_url\u003E",
              "status": "\u003Can_url\u003E",
              "cancel": "\u003Can_url\u003E"
            },
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Order.OrderStatusQueueCountOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "Order.OrderUpdateInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "reference": {
            "maxLength": 128,
            "description": "The merchant identification of this transaction. \n This field only allows alphanumeric characters",
            "example": "REF1234",
            "type": "string",
            "nullable": true
          },
          "description": {
            "description": "Is shown on the statement of the payer.",
            "example": "Order Description",
            "type": "string",
            "nullable": true
          }
        }
      },
      "OrderCheckoutOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "a9be8a9e-930f-4871-9e39-afd51a927992",
            "type": "string"
          },
          "point_of_sale": {
            "example": "SL-1234-5678",
            "$ref": "#/components/schemas/PointOfSaleOutputDto"
          },
          "merchant": {
            "$ref": "#/components/schemas/MerchantOutputDto"
          },
          "tradename": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TradenameOutputDto"
              }
            ],
            "nullable": true
          },
          "status": {
            "example": "new",
            "type": "string"
          },
          "invoice_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "delivery_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "send_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "$ref": "#/components/schemas/AmountOutputDto"
          },
          "guaranteedAmount": {
            "$ref": "#/components/schemas/AmountOutputDto"
          },
          "return_url": {
            "description": "The URL where the payer will be sent to after the payment.",
            "example": "https://www.pay.nl/return",
            "type": "string",
            "nullable": true
          },
          "enduser": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnduserOutputDto"
              }
            ],
            "nullable": true
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodInputOutputDto"
              }
            ],
            "nullable": true
          },
          "ipn_urls": {
            "description": "Array of URLs where we exchange the status of a transaction.",
            "example": [
              "https://pay.nl/ipn1",
              "https://pay.nl/ipn2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "application": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ApplicationOutputDto"
              }
            ],
            "nullable": true
          },
          "plugin": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PluginOutputDto"
              }
            ],
            "nullable": true
          },
          "test": {
            "type": "boolean"
          },
          "logging": {
            "type": "boolean"
          },
          "instore": {
            "type": "boolean"
          },
          "reference": {
            "description": "The merchant identification of this transaction.",
            "example": "1234ABC",
            "type": "string",
            "nullable": true
          },
          "manualTransferCode": {
            "type": "string"
          },
          "description": {
            "description": "Is shown on the statement of the payer.",
            "example": "Testdescription",
            "type": "string",
            "nullable": true
          },
          "stats_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatsDataOutputDto"
              }
            ],
            "nullable": true
          },
          "language": {
            "description": "https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",
            "example": "nl",
            "type": "string",
            "nullable": true
          },
          "country": {
            "description": "https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes",
            "example": "NL",
            "type": "string",
            "nullable": true
          },
          "customer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerOutputDto"
              }
            ],
            "nullable": true
          },
          "company": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompanyOutputDto"
              }
            ],
            "nullable": true
          },
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressOutputDto"
              }
            ],
            "nullable": true
          },
          "billing_contact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactOutputDto"
              }
            ],
            "nullable": true
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressOutputDto"
              }
            ],
            "nullable": true
          },
          "shipping_contact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactOutputDto"
              }
            ],
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOutputDto"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCheckoutOutputDto"
            }
          },
          "checkout_url": {
            "example": "https://achterelkebetaling.nl/checkout",
            "type": "string",
            "nullable": true
          },
          "status_url": {
            "example": "https://achterelkebetaling.nl/status",
            "type": "string",
            "nullable": true
          }
        }
      },
      "OrderCheckoutOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "a9be8a9e-930f-4871-9e39-afd51a927992",
            "type": "string"
          },
          "point_of_sale": {
            "example": "SL-1234-5678",
            "$ref": "#/components/schemas/PointOfSaleOutputDto-generic.api_amount-currency-symbol"
          },
          "merchant": {
            "$ref": "#/components/schemas/MerchantOutputDto-generic.api_amount-currency-symbol"
          },
          "tradename": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TradenameOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "status": {
            "example": "new",
            "type": "string"
          },
          "invoice_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "delivery_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "send_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "$ref": "#/components/schemas/AmountOutputDto-generic.api_amount-currency-symbol"
          },
          "guaranteedAmount": {
            "$ref": "#/components/schemas/AmountOutputDto-generic.api_amount-currency-symbol"
          },
          "return_url": {
            "description": "The URL where the payer will be sent to after the payment.",
            "example": "https://www.pay.nl/return",
            "type": "string",
            "nullable": true
          },
          "enduser": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnduserOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodInputOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "ipn_urls": {
            "description": "Array of URLs where we exchange the status of a transaction.",
            "example": [
              "https://pay.nl/ipn1",
              "https://pay.nl/ipn2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "application": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ApplicationOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "plugin": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PluginOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "test": {
            "type": "boolean"
          },
          "logging": {
            "type": "boolean"
          },
          "instore": {
            "type": "boolean"
          },
          "reference": {
            "description": "The merchant identification of this transaction.",
            "example": "1234ABC",
            "type": "string",
            "nullable": true
          },
          "manualTransferCode": {
            "type": "string"
          },
          "description": {
            "description": "Is shown on the statement of the payer.",
            "example": "Testdescription",
            "type": "string",
            "nullable": true
          },
          "stats_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatsDataOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "language": {
            "description": "https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",
            "example": "nl",
            "type": "string",
            "nullable": true
          },
          "country": {
            "description": "https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes",
            "example": "NL",
            "type": "string",
            "nullable": true
          },
          "customer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "company": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompanyOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "billing_contact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "shipping_contact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactOutputDto-generic.api_amount-currency-symbol"
              }
            ],
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOutputDto-generic.api_amount-currency-symbol"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCheckoutOutputDto-generic.api_amount-currency-symbol"
            }
          },
          "checkout_url": {
            "example": "https://achterelkebetaling.nl/checkout",
            "type": "string",
            "nullable": true
          },
          "status_url": {
            "example": "https://achterelkebetaling.nl/status",
            "type": "string",
            "nullable": true
          }
        }
      },
      "OrderPaymentCheckoutDataOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "type": "string"
          }
        }
      },
      "OrderStatsOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "extra1": {
            "description": "The first free value which can be tracked in the stats.",
            "example": "Extra1",
            "type": "string",
            "nullable": true
          },
          "extra2": {
            "description": "The second free value which can be tracked in the stats.",
            "example": "Extra2",
            "type": "string",
            "nullable": true
          },
          "extra3": {
            "description": "The third free value which can be tracked in the stats.",
            "example": "Extra3",
            "type": "string",
            "nullable": true
          },
          "tool": {
            "description": "The used tool code which can be tracked in the stats.",
            "example": "Tool",
            "type": "string",
            "nullable": true
          },
          "info": {
            "description": "The used info code which can be tracked in the stats.",
            "example": "Info",
            "type": "string",
            "nullable": true
          },
          "object": {
            "description": "The object which can be tracked in stats.",
            "example": "Object",
            "type": "string",
            "nullable": true
          },
          "promotorId": {
            "example": "8763",
            "type": "integer",
            "nullable": true
          },
          "domainId": {
            "example": "WU-1234-1234",
            "type": "string",
            "nullable": true
          }
        }
      },
      "OrderStatsOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "extra1": {
            "description": "The first free value which can be tracked in the stats.",
            "example": "Extra1",
            "type": "string",
            "nullable": true
          },
          "extra2": {
            "description": "The second free value which can be tracked in the stats.",
            "example": "Extra2",
            "type": "string",
            "nullable": true
          },
          "extra3": {
            "description": "The third free value which can be tracked in the stats.",
            "example": "Extra3",
            "type": "string",
            "nullable": true
          },
          "tool": {
            "description": "The used tool code which can be tracked in the stats.",
            "example": "Tool",
            "type": "string",
            "nullable": true
          },
          "info": {
            "description": "The used info code which can be tracked in the stats.",
            "example": "Info",
            "type": "string",
            "nullable": true
          },
          "object": {
            "description": "The object which can be tracked in stats.",
            "example": "Object",
            "type": "string",
            "nullable": true
          },
          "promotorId": {
            "example": "8763",
            "type": "integer",
            "nullable": true
          },
          "domainId": {
            "example": "WU-1234-1234",
            "type": "string",
            "nullable": true
          }
        }
      },
      "PayerInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Payment": {
        "type": "object",
        "description": "",
        "deprecated": false
      },
      "Payment.ConfirmPaymentInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "amount",
          "payer"
        ],
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Order.Input.Amount"
          },
          "payer": {
            "$ref": "#/components/schemas/PayerInputDto-generic.api"
          },
          "mutation_id": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "Payment.ConfirmPaymentOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "Payment.OrderPaymentScreenOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "payment_data": {
            "$ref": "#/components/schemas/PaymentDataOutputDto"
          },
          "order": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderCheckoutOutputDto"
              }
            ],
            "nullable": true
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentCheckoutOutputDto"
          },
          "checkout_data": {
            "readOnly": true,
            "$ref": "#/components/schemas/OrderPaymentCheckoutDataOutputDto"
          },
          "supportedLocales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocaleOutputDto"
            }
          },
          "styling": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StylingOutputDto"
              }
            ],
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkOutputDto"
            }
          }
        }
      },
      "Payment.ProcessPaymentScreenDataOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "redirectUrl": {
            "type": "string"
          }
        }
      },
      "Payment.RefundPaymentAmountInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "amount": {
            "description": "The desired amount, in cents, to be captured.",
            "example": 1350,
            "type": "integer"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Payment.RefundPaymentInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Payment.RefundPaymentOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "amount": {
            "type": "integer"
          }
        }
      },
      "PaymentBrandOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          }
        }
      },
      "PaymentBrandOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          }
        }
      },
      "PaymentCheckoutOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "changed_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "order_amount": {
            "type": "integer"
          },
          "amount": {
            "$ref": "#/components/schemas/AmountOutputDto"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethodOutputDto"
          },
          "payment_brand": {
            "$ref": "#/components/schemas/PaymentBrandOutputDto"
          },
          "status": {
            "type": "string"
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "issuer_id": {
            "type": "string",
            "nullable": true
          },
          "trm": {
            "type": "integer",
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
          },
          "return_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaymentCheckoutOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "changed_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "order_amount": {
            "type": "integer"
          },
          "amount": {
            "$ref": "#/components/schemas/AmountOutputDto-generic.api_amount-currency-symbol"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethodOutputDto-generic.api_amount-currency-symbol"
          },
          "payment_brand": {
            "$ref": "#/components/schemas/PaymentBrandOutputDto-generic.api_amount-currency-symbol"
          },
          "status": {
            "type": "string"
          },
          "external_id": {
            "type": "string",
            "nullable": true
          },
          "issuer_id": {
            "type": "string",
            "nullable": true
          },
          "trm": {
            "type": "integer",
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
          },
          "return_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaymentDataOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "payment_amount": {
            "readOnly": true,
            "$ref": "#/components/schemas/AmountOutputDto"
          },
          "order_amount": {
            "readOnly": true,
            "$ref": "#/components/schemas/AmountOutputDto"
          },
          "point_of_sale_id": {
            "readOnly": true,
            "type": "string"
          },
          "point_of_sale_name": {
            "readOnly": true,
            "type": "string"
          },
          "merchant_name": {
            "readOnly": true,
            "type": "string"
          },
          "order_description": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "order_reference": {
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "open",
              "pending",
              "completed",
              "cancelled",
              "expired",
              "denied",
              "error",
              "failed"
            ]
          },
          "return_url": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "test": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "PaymentDataOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "payment_amount": {
            "readOnly": true,
            "$ref": "#/components/schemas/AmountOutputDto-generic.api_amount-currency-symbol"
          },
          "order_amount": {
            "readOnly": true,
            "$ref": "#/components/schemas/AmountOutputDto-generic.api_amount-currency-symbol"
          },
          "point_of_sale_id": {
            "readOnly": true,
            "type": "string"
          },
          "point_of_sale_name": {
            "readOnly": true,
            "type": "string"
          },
          "merchant_name": {
            "readOnly": true,
            "type": "string"
          },
          "order_description": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "order_reference": {
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "open",
              "pending",
              "completed",
              "cancelled",
              "expired",
              "denied",
              "error",
              "failed"
            ]
          },
          "return_url": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "test": {
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "PaymentMethodInputOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "payment_method": {
            "type": "string"
          },
          "input": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PaymentMethodInputOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "payment_method": {
            "type": "string"
          },
          "input": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PaymentMethodOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "input": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PaymentMethodOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "input": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PaymentMethodOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string"
          }
        }
      },
      "PaymentOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "The unique ID of this payment",
            "example": "2d29c301-c71d-4016-8239-4ee3194a234e",
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/Order.Output.PaymentMethod",
            "description": "Information of this payments' payment method."
          },
          "customerType": {
            "type": "string",
            "nullable": true
          },
          "customerKey": {
            "description": "A hashed string identifying the customer itself without exposing sensitive data.",
            "example": "5d7dbff5bf0a64c7e3d9dbd8806d2b55d3d67731",
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "description": "The identifier of the customer as known by the payment method. For example the IBAN.",
            "example": "GB33BUKB20201555555555",
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "description": "The name of the customer as known by the payment method.",
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "description": "The IP Address of the customer that interacted with this payment.",
            "type": "string",
            "nullable": true
          },
          "secureStatus": {
            "description": "Whether or not the customer was 3DS challenged.",
            "type": "boolean"
          },
          "paymentVerificationMethod": {
            "description": "A numeric id of how this payment was verified.",
            "type": "integer",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Order.Output.Status",
            "description": "The status of this payment."
          },
          "currencyAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment in the currency of the order."
          },
          "amount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment in the currency in which it was processed."
          },
          "authorizedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment that is authorized."
          },
          "capturedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment that is captured."
          },
          "supplierData": {
            "description": "Relevant data returned by the supplier.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "PaymentOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "The unique ID of this payment",
            "example": "2d29c301-c71d-4016-8239-4ee3194a234e",
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/Order.Output.PaymentMethod",
            "description": "Information of this payments' payment method."
          },
          "customerType": {
            "type": "string",
            "nullable": true
          },
          "customerKey": {
            "description": "A hashed string identifying the customer itself without exposing sensitive data.",
            "example": "5d7dbff5bf0a64c7e3d9dbd8806d2b55d3d67731",
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "description": "The identifier of the customer as known by the payment method. For example the IBAN.",
            "example": "GB33BUKB20201555555555",
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "description": "The name of the customer as known by the payment method.",
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "description": "The IP Address of the customer that interacted with this payment.",
            "type": "string",
            "nullable": true
          },
          "secureStatus": {
            "description": "Whether or not the customer was 3DS challenged.",
            "type": "boolean"
          },
          "paymentVerificationMethod": {
            "description": "A numeric id of how this payment was verified.",
            "type": "integer",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Order.Output.Status",
            "description": "The status of this payment."
          },
          "currencyAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment in the currency of the order."
          },
          "amount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment in the currency in which it was processed."
          },
          "authorizedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment that is authorized."
          },
          "capturedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment that is captured."
          },
          "supplierData": {
            "description": "Relevant data returned by the supplier.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "PaymentScreenMessageOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "message": {
            "example": "Something went wrong",
            "type": "string"
          },
          "type": {
            "example": {
              "name": "ERROR",
              "value": "error"
            },
            "type": "string",
            "enum": [
              "error",
              "info",
              "success"
            ]
          }
        }
      },
      "PluginOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "Plugin name",
            "type": "string"
          },
          "version": {
            "example": "1.1.1",
            "type": "string"
          }
        }
      },
      "PluginOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "Plugin name",
            "type": "string"
          },
          "version": {
            "example": "1.1.1",
            "type": "string"
          }
        }
      },
      "PointOfSale": {
        "type": "object",
        "description": "",
        "deprecated": false
      },
      "PointOfSale.PointOfSaleOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "websiteLocationId": {
            "type": "integer"
          },
          "websiteId": {
            "type": "integer"
          },
          "pointOfSaleGroupId": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "pointOfSaleIpnUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfSaleIpnUrlOutputDto"
            }
          },
          "websiteUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebsiteUrlOutputDto"
            }
          },
          "merchant": {
            "$ref": "#/components/schemas/MerchantOutputDto"
          },
          "merchantNameId": {
            "type": "string",
            "nullable": true
          },
          "mccCode": {
            "type": "string",
            "nullable": true
          },
          "tariffGroupTypeId": {
            "type": "string",
            "nullable": true
          },
          "layoutId": {
            "type": "string",
            "nullable": true
          },
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "errorUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PointOfSaleIpnUrlOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "sendMethod": {
            "type": "integer"
          },
          "retrySchemeId": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "PointOfSaleOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "SL-8498-3425",
            "type": "string",
            "nullable": true
          },
          "name": {
            "example": "Farm equipment",
            "type": "string",
            "nullable": true
          },
          "group_id": {
            "example": "P-1234-5678",
            "type": "string",
            "nullable": true
          },
          "url": {
            "example": "https://myfarmequipment.com/",
            "type": "string",
            "nullable": true
          },
          "description": {
            "example": "Description of my point of sale",
            "type": "string",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          },
          "test_mode": {
            "example": "false",
            "type": "boolean",
            "nullable": true
          },
          "mcc_code": {
            "example": "false",
            "type": "string",
            "nullable": true
          }
        }
      },
      "PointOfSaleOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "SL-8498-3425",
            "type": "string",
            "nullable": true
          },
          "name": {
            "example": "Farm equipment",
            "type": "string",
            "nullable": true
          },
          "group_id": {
            "example": "P-1234-5678",
            "type": "string",
            "nullable": true
          },
          "url": {
            "example": "https://myfarmequipment.com/",
            "type": "string",
            "nullable": true
          },
          "description": {
            "example": "Description of my point of sale",
            "type": "string",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          },
          "test_mode": {
            "example": "false",
            "type": "boolean",
            "nullable": true
          },
          "mcc_code": {
            "example": "false",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "type": {
            "example": "ARTICLE",
            "type": "string"
          },
          "name": {
            "example": "Testproduct",
            "type": "string"
          },
          "unit_price": {
            "example": "595",
            "type": "integer"
          },
          "quantity": {
            "example": "1.0",
            "type": "number"
          },
          "vat_percentage": {
            "example": "0.21",
            "type": "number"
          },
          "external_id": {
            "example": "123b123h1239",
            "type": "string",
            "nullable": true
          },
          "ean": {
            "example": "4070071967072",
            "type": "string",
            "nullable": true
          },
          "discount": {
            "example": "5",
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ProductOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "type": {
            "example": "ARTICLE",
            "type": "string"
          },
          "name": {
            "example": "Testproduct",
            "type": "string"
          },
          "unit_price": {
            "example": "595",
            "type": "integer"
          },
          "quantity": {
            "example": "1.0",
            "type": "number"
          },
          "vat_percentage": {
            "example": "0.21",
            "type": "number"
          },
          "external_id": {
            "example": "123b123h1239",
            "type": "string",
            "nullable": true
          },
          "ean": {
            "example": "4070071967072",
            "type": "string",
            "nullable": true
          },
          "discount": {
            "example": "5",
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ProductQuantityInputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "id",
          "quantity"
        ],
        "properties": {
          "id": {
            "description": "The externalId of the product to be captured.",
            "example": "Product1",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of this product to be captured.",
            "example": 2,
            "type": "number"
          }
        }
      },
      "PublicContactOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "StatsDataOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "extra1": {
            "description": "The first free value which can be tracked in the stats.",
            "example": "Extra1",
            "type": "string",
            "nullable": true
          },
          "extra2": {
            "description": "The second free value which can be tracked in the stats.",
            "example": "Extra2",
            "type": "string",
            "nullable": true
          },
          "extra3": {
            "description": "The third free value which can be tracked in the stats.",
            "example": "Extra3",
            "type": "string",
            "nullable": true
          },
          "tool": {
            "description": "The used tool code which can be tracked in the stats.",
            "example": "Tool",
            "type": "string",
            "nullable": true
          },
          "info": {
            "description": "The used info code which can be tracked in the stats.",
            "example": "Info",
            "type": "string",
            "nullable": true
          },
          "object": {
            "description": "The object which can be tracked in stats.",
            "example": "Object",
            "type": "string",
            "nullable": true
          },
          "promotor_id": {
            "example": "8763",
            "type": "integer",
            "nullable": true
          },
          "domain_id": {
            "example": "WU-1234-1234",
            "type": "string",
            "nullable": true
          },
          "transfer_data": {
            "example": {
              "yourCustom1": "Custom Data Field 1",
              "yourCustom2": "Custom Data Field 2"
            },
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StatsDataOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "extra1": {
            "description": "The first free value which can be tracked in the stats.",
            "example": "Extra1",
            "type": "string",
            "nullable": true
          },
          "extra2": {
            "description": "The second free value which can be tracked in the stats.",
            "example": "Extra2",
            "type": "string",
            "nullable": true
          },
          "extra3": {
            "description": "The third free value which can be tracked in the stats.",
            "example": "Extra3",
            "type": "string",
            "nullable": true
          },
          "tool": {
            "description": "The used tool code which can be tracked in the stats.",
            "example": "Tool",
            "type": "string",
            "nullable": true
          },
          "info": {
            "description": "The used info code which can be tracked in the stats.",
            "example": "Info",
            "type": "string",
            "nullable": true
          },
          "object": {
            "description": "The object which can be tracked in stats.",
            "example": "Object",
            "type": "string",
            "nullable": true
          },
          "promotor_id": {
            "example": "8763",
            "type": "integer",
            "nullable": true
          },
          "domain_id": {
            "example": "WU-1234-1234",
            "type": "string",
            "nullable": true
          },
          "transfer_data": {
            "example": {
              "yourCustom1": "Custom Data Field 1",
              "yourCustom2": "Custom Data Field 2"
            },
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StatusOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "code": {
            "description": "The numeric status code.",
            "example": 20,
            "type": "integer",
            "nullable": true
          },
          "action": {
            "description": "The human readable status string",
            "example": "PENDING",
            "type": "string",
            "nullable": true
          }
        }
      },
      "StatusOutputDto-generic.api": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "code": {
            "description": "The numeric status code.",
            "example": 20,
            "type": "integer",
            "nullable": true
          },
          "action": {
            "description": "The human readable status string",
            "example": "PENDING",
            "type": "string",
            "nullable": true
          }
        }
      },
      "StylingOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "stylesheet_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StylingOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "stylesheet_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TradenameOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "TM-1234-1234",
            "type": "string"
          },
          "name": {
            "example": "John Doe Farm equipment",
            "type": "string"
          }
        }
      },
      "TradenameOutputDto-generic.api_amount-currency-symbol": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "TM-1234-1234",
            "type": "string"
          },
          "name": {
            "example": "John Doe Farm equipment",
            "type": "string"
          }
        }
      },
      "WebsiteUrlOutputDto": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "scrambledCode": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Order.Input": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "serviceId",
          "amount"
        ],
        "properties": {
          "serviceId": {
            "minLength": 12,
            "maxLength": 12,
            "pattern": "^(SL-[0-9]{4}-[0-9]{4})$",
            "type": "string",
            "description": "Unique service location identifier",
            "example": "SL-####-####"
          },
          "description": {
            "description": "Is shown on the statement of the payer.",
            "example": "Order Description",
            "type": "string",
            "nullable": true
          },
          "reference": {
            "maxLength": 128,
            "description": "The merchant identification of this transaction. \n This field only allows alphanumeric characters",
            "example": "REF1234",
            "type": "string",
            "nullable": true
          },
          "expire": {
            "description": "The time at which this order expires. Must be in ATOM (ISO-8601) notation.",
            "example": "1999-11-22T13:37:00+01:00",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "returnUrl": {
            "description": "The URL where the payer will be sent to after the payment.",
            "example": "https://demo.pay.nl/start/return.php",
            "type": "string",
            "nullable": true
          },
          "exchangeUrl": {
            "description": "The URL where we exchange the status of a transaction.",
            "example": "https://demo.pay.nl/exchange.php",
            "type": "string",
            "nullable": true
          },
          "amount": {
            "$ref": "#/components/schemas/Order.Input.Amount"
          },
          "paymentMethod": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.PaymentMethod"
              }
            ],
            "nullable": true
          },
          "integration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Integration"
              }
            ],
            "nullable": true
          },
          "optimize": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Optimize"
              }
            ],
            "nullable": true
          },
          "customer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Customer"
              }
            ],
            "nullable": true
          },
          "order": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Order"
              }
            ],
            "nullable": true
          },
          "notification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Notification"
              }
            ],
            "nullable": true
          },
          "stats": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Stats"
              }
            ],
            "nullable": true
          },
          "transferData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "Order.Input.Optimize": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "flow": {
            "enum": [
              "fastCheckout"
            ],
            "type": "string",
            "nullable": true
          },
          "shippingAddress": {
            "type": "boolean",
            "nullable": true
          },
          "billingAddress": {
            "type": "boolean",
            "nullable": true
          },
          "contactDetails": {
            "type": "boolean",
            "nullable": true
          },
          "mcc": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "collectorAccount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Optimize.CollectorAccount"
              }
            ],
            "nullable": true
          },
          "collectorCompany": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Optimize.CollectorCompany"
              }
            ],
            "nullable": true
          }
        }
      },
      "Order.Input.Optimize.CollectorAccount": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "method": {
            "enum": [
              "iban"
            ],
            "type": "string"
          },
          "iban": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Optimize.CollectorAccount.Iban"
              }
            ],
            "nullable": true
          }
        }
      },
      "Order.Input.Optimize.CollectorCompany": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "id",
          "name",
          "countryCode"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          }
        }
      },
      "Order.Input.Amount": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "minimum": -2147483647,
            "maximum": 2147483647,
            "description": "The amount in cents. Є1.50 becomes 150",
            "example": 1,
            "type": "integer"
          },
          "currency": {
            "externalDocs": {
              "url": "https://schema.org/priceCurrency"
            },
            "example": "EUR",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.Input.PaymentMethod": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 10,
            "nullable": true
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.PaymentMethod.Giftcard"
              },
              {
                "$ref": "#/components/schemas/Order.PaymentMethod.Pin"
              },
              {
                "$ref": "#/components/schemas/Order.PaymentMethod.DirectDebit"
              },
              {
                "$ref": "#/components/schemas/Order.PaymentMethod.Klarna"
              },
              {
                "$ref": "#/components/schemas/Order.PaymentMethod.Przelewy24"
              },
              {
                "$ref": "#/components/schemas/Order.PaymentMethod.PayByBank"
              },
              {
                "$ref": "#/components/schemas/Order.PaymentMethod.SprayPay"
              },
              {
                "$ref": "#/components/schemas/Order.PaymentMethod.PayPal"
              }
            ],
            "type": "object",
            "description": "Additional input for the payment method.",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "Order.Input.Integration": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "test": {
            "type": "boolean",
            "nullable": true
          },
          "pointOfInteraction": {
            "enum": [
              "ON_THE_MOVE",
              "ECOMMERCE",
              "IN_PERSON",
              "INVOICE",
              "DEBT_COLLECTION",
              "FUNDING",
              "PAYMENT_REQUEST",
              "RECURRING",
              "UNATTENDED",
              "MOTO",
              "PAYOUT"
            ],
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.Input.Customer": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "email": {
            "format": "email",
            "minLength": 1,
            "maxLength": 255,
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "example": "johndoe@example.com",
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "minLength": 1,
            "maxLength": 255,
            "example": "John",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "minLength": 1,
            "maxLength": 255,
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "externalDocs": {
              "url": "https://schema.org/Date"
            },
            "example": "1999-11-22",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "minLength": 1,
            "maxLength": 1,
            "example": "O",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "example": "06-12345678",
            "type": "string",
            "nullable": true
          },
          "locale": {
            "example": "nl_BE",
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "example": "192.168.0.1",
            "type": "string",
            "nullable": true
          },
          "trust": {
            "example": 1,
            "type": "integer",
            "nullable": true
          },
          "reference": {
            "example": "Your customer reference",
            "type": "string",
            "nullable": true
          },
          "gaClientId": {
            "example": "GA1.2.904941809.1556093647",
            "type": "string",
            "nullable": true
          },
          "company": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Company"
              }
            ],
            "nullable": true
          }
        }
      },
      "Order.Input.Order": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "countryCode": {
            "example": "NL",
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "example": "2023-12-24",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceDate": {
            "example": "2023-12-24",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Address"
              }
            ],
            "nullable": true
          },
          "invoiceAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Address"
              }
            ],
            "nullable": true
          },
          "products": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Order.Input.Product"
                }
              ]
            },
            "type": "array"
          }
        }
      },
      "Order.Input.Company": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "Company.",
            "type": "string",
            "nullable": true
          },
          "cocNumber": {
            "example": "000000",
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "example": "NL000000000B01",
            "type": "string",
            "nullable": true
          },
          "country": {
            "example": "NL",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.Input.Address": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "firstName": {
            "description": "The forename (also known as a given name, Christian name or a first name).",
            "example": "John",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "description": "The surname (also known as a family name or a last name).",
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "street": {
            "minLength": 1,
            "maxLength": 255,
            "description": "The name of the street",
            "example": "P.C. Hooftstraat",
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "minLength": 1,
            "maxLength": 16,
            "example": "100",
            "type": "string",
            "nullable": true
          },
          "streetNumberExtension": {
            "minLength": 1,
            "maxLength": 16,
            "example": "second floor",
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "minLength": 1,
            "maxLength": 100,
            "example": "3202XA",
            "type": "string",
            "nullable": true
          },
          "city": {
            "minLength": 1,
            "maxLength": 255,
            "example": "Amsterdam",
            "type": "string",
            "nullable": true
          },
          "country": {
            "minLength": 2,
            "maxLength": 2,
            "example": "NL",
            "type": "string",
            "nullable": true
          },
          "region": {
            "minLength": 1,
            "maxLength": 50,
            "example": "NL",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "street",
          "streetNumber",
          "zipCode",
          "city",
          "country"
        ]
      },
      "Order.Input.Product": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "example": "123b123h1239",
            "type": "string",
            "nullable": true
          },
          "description": {
            "example": "Pair of socks",
            "type": "string",
            "nullable": true
          },
          "type": {
            "description": "The type of product. \n\n             More information can be found here: https://developer.pay.nl/reference/get_product_types",
            "example": "ARTICLE",
            "type": "string",
            "nullable": true
          },
          "price": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Input.Amount"
              }
            ],
            "nullable": true
          },
          "quantity": {
            "minimum": 0,
            "example": 1,
            "type": "number",
            "nullable": true
          },
          "vatPercentage": {
            "minimum": 0,
            "maximum": 100,
            "example": 21,
            "type": "number",
            "nullable": true
          }
        }
      },
      "Order.Input.Notification": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "type": {
            "enum": [
              "push",
              "email"
            ],
            "description": "Use \"push\" for push messages, or \"email\" to send out an email.\n                      For more information check the following page: https://paynl.readme.io/reference/accounts-1",
            "type": "string",
            "nullable": true
          },
          "recipient": {
            "description": "The recipient of the notification. For push messages, use your device id (AD-XXXX-XXXX). \n        For email, provide a valid email address (XXXX@XXXX.XX).",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.Input.Stats": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "tool": {
            "description": "The used tool code which can be tracked in the stats.",
            "example": "Tool",
            "type": "string",
            "nullable": true
          },
          "info": {
            "description": "The used info code which can be tracked in the stats.",
            "example": "Info",
            "type": "string",
            "nullable": true
          },
          "object": {
            "description": "The object which can be tracked in stats.",
            "example": "Object",
            "type": "string",
            "nullable": true
          },
          "extra1": {
            "description": "The first free value which can be tracked in the stats.",
            "example": "Extra1",
            "type": "string",
            "nullable": true
          },
          "extra2": {
            "description": "The second free value which can be tracked in the stats.",
            "example": "Extra2",
            "type": "string",
            "nullable": true
          },
          "extra3": {
            "description": "The third free value which can be tracked in the stats.",
            "example": "Extra3",
            "type": "string",
            "nullable": true
          },
          "domainId": {
            "example": "WU-1234-1234",
            "type": "string",
            "nullable": true
          },
          "promotorId": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "Order.Output": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "The unique identifier of your order.",
            "example": "655b2da5-5223-8f32-1aee-737862302XXX",
            "type": "string"
          },
          "type": {
            "description": "The order type.",
            "example": "sale",
            "type": "string"
          },
          "serviceId": {
            "description": "The Service ID used for creating this order",
            "example": "SL-####-####",
            "type": "string"
          },
          "description": {
            "description": "The description given for this order.",
            "example": "Instore Terminal Order #27",
            "type": "string",
            "nullable": true
          },
          "reference": {
            "description": "The reference given for this order.",
            "example": "REF1234",
            "type": "string",
            "nullable": true
          },
          "manualTransferCode": {
            "description": "The manual transfer code that can be used to transfer the order amount to PAY. using a bank transfer.",
            "example": "1234 1234 1234 1234",
            "type": "string"
          },
          "orderId": {
            "description": "The order ID as you would see it within the PAY. platform.",
            "example": "52305407020X2325",
            "type": "string"
          },
          "uuid": {
            "description": "The UUID that can be used to create a QR code for this order.",
            "example": "ad0e7378-6230-2325-5230-5407020a2XXX",
            "type": "string"
          },
          "customerKey": {
            "readOnly": true,
            "description": "An identifier for the customer",
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Order.Output.Status",
            "description": "The status of the order."
          },
          "receipt": {
            "readOnly": true,
            "description": "Base64 encoded string of the receipt for this order when it's paid.",
            "example": "\u003Cbase64 string\u003E",
            "type": "string",
            "nullable": true
          },
          "integration": {
            "$ref": "#/components/schemas/Order.Output.Integration",
            "description": "Information about your integration."
          },
          "stats": {
            "$ref": "#/components/schemas/Order.Output.Stats",
            "description": "Contains the statsData object as given when the order was created."
          },
          "transferData": {
            "description": "Contains the transferData values given when the order was created.",
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "amount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount for this order."
          },
          "authorizedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of the order that is authorized."
          },
          "capturedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of the order that is captured."
          },
          "checkoutData": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Output.CheckoutData"
              }
            ],
            "readOnly": true,
            "description": "Standardized customer data provided by the supplier",
            "nullable": true
          },
          "payments": {
            "items": {
              "$ref": "#/components/schemas/Order.Output.Payment"
            },
            "readOnly": true,
            "description": "The payments that are linked to this order.",
            "type": "array"
          },
          "createdAt": {
            "description": "The date-time at which this order was created in our system.",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "description": "The API token or Service ID that created this order.",
            "type": "string",
            "nullable": true
          },
          "modifiedAt": {
            "description": "The date-time at which this order was modified in our system. This can be done by you or by actions taken within our order-payment flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The API token or Service ID that did the modification of the order. This can also be the TGU node that was handling the order-payment flow.",
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "description": "The date-time at which this order expires.",
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "description": "The date-time at which this order was completed. This means that all underlying payments are captured and money is guaranteed.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "links": {
            "readOnly": true,
            "description": "The links that can be used to interact with this order.",
            "example": {
              "redirect": "\u003Can_url\u003E",
              "status": "\u003Can_url\u003E",
              "cancel": "\u003Can_url\u003E"
            },
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Order.Output.Status": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "code": {
            "description": "The numeric status code.",
            "example": 20,
            "type": "integer",
            "nullable": true
          },
          "action": {
            "description": "The human readable status string",
            "example": "PENDING",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.Output.Integration": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "pointOfInteraction": {
            "type": "string",
            "nullable": true
          },
          "test": {
            "description": "Whether this order was created in Test Mode, defaults to false.",
            "type": "boolean"
          }
        }
      },
      "Order.Output.Stats": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "extra1": {
            "description": "The first free value which can be tracked in the stats.",
            "example": "Extra1",
            "type": "string",
            "nullable": true
          },
          "extra2": {
            "description": "The second free value which can be tracked in the stats.",
            "example": "Extra2",
            "type": "string",
            "nullable": true
          },
          "extra3": {
            "description": "The third free value which can be tracked in the stats.",
            "example": "Extra3",
            "type": "string",
            "nullable": true
          },
          "tool": {
            "description": "The used tool code which can be tracked in the stats.",
            "example": "Tool",
            "type": "string",
            "nullable": true
          },
          "info": {
            "description": "The used info code which can be tracked in the stats.",
            "example": "Info",
            "type": "string",
            "nullable": true
          },
          "object": {
            "description": "The object which can be tracked in stats.",
            "example": "Object",
            "type": "string",
            "nullable": true
          },
          "promotorId": {
            "example": "8763",
            "type": "integer",
            "nullable": true
          },
          "domainId": {
            "example": "WU-1234-1234",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.Output.Amount": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "value": {
            "example": 1,
            "type": "integer"
          },
          "currency": {
            "example": "EUR",
            "type": "string"
          }
        }
      },
      "Order.Output.Payment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "The unique ID of this payment",
            "example": "2d29c301-c71d-4016-8239-4ee3194a234e",
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/Order.Output.PaymentMethod",
            "description": "Information of this payments' payment method."
          },
          "customerType": {
            "type": "string",
            "nullable": true
          },
          "customerKey": {
            "description": "A hashed string identifying the customer itself without exposing sensitive data.",
            "example": "5d7dbff5bf0a64c7e3d9dbd8806d2b55d3d67731",
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "description": "The identifier of the customer as known by the payment method. For example the IBAN.",
            "example": "GB33BUKB20201555555555",
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "description": "The name of the customer as known by the payment method.",
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "description": "The IP Address of the customer that interacted with this payment.",
            "type": "string",
            "nullable": true
          },
          "secureStatus": {
            "description": "Whether or not the customer was 3DS challenged.",
            "type": "boolean"
          },
          "paymentVerificationMethod": {
            "description": "A numeric id of how this payment was verified.",
            "type": "integer",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Order.Output.Status",
            "description": "The status of this payment."
          },
          "currencyAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment in the currency of the order."
          },
          "amount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment in the currency in which it was processed."
          },
          "authorizedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment that is authorized."
          },
          "capturedAmount": {
            "$ref": "#/components/schemas/Order.Output.Amount",
            "description": "The amount of this payment that is captured."
          },
          "supplierData": {
            "description": "Relevant data returned by the supplier.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "Order.Output.PaymentMethod": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "input": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Order.Output.CheckoutData": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Customer",
            "description": "The customer provided by the supplier"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Address",
            "readOnly": true,
            "description": "The billing address provided by the supplier"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Order.Output.CheckoutData.Address",
            "description": "The delivery address provided by the supplier"
          }
        }
      },
      "Order.Output.CheckoutData.Address": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "firstName": {
            "example": "John",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "example": "Curieweg",
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "example": "19",
            "type": "string",
            "nullable": true
          },
          "streetNumberAddition": {
            "example": "C",
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "example": "3208 KJ",
            "type": "string",
            "nullable": true
          },
          "city": {
            "example": "Spijkenisse",
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "example": "NL",
            "type": "string",
            "nullable": true
          },
          "regionCode": {
            "example": "nl-ZH",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.Output.CheckoutData.Company": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "example": "Pay.",
            "type": "string",
            "nullable": true
          },
          "cocNumber": {
            "example": "24283498",
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "example": "NL807960147B01",
            "type": "string",
            "nullable": true
          },
          "country": {
            "example": "NL",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.Output.CheckoutData.Customer": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "email": {
            "example": "johndoe@example.com",
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "example": "John",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "example": "Doe",
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "example": "1999-11-22",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "example": "O",
            "type": "string",
            "nullable": true
          },
          "phone": {
            "example": "06-12345678",
            "type": "string",
            "nullable": true
          },
          "locale": {
            "example": "nl_BE",
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "example": "192.168.0.1",
            "type": "string",
            "nullable": true
          },
          "reference": {
            "example": "Cstmr12",
            "type": "string",
            "nullable": true
          },
          "company": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Order.Output.CheckoutData.Company"
              }
            ],
            "nullable": true
          }
        }
      },
      "Order.PaymentMethod.Giftcard": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "cardNumber"
        ],
        "properties": {
          "cardNumber": {
            "minLength": 10,
            "description": "The card number of the Giftcard",
            "example": "6064363019",
            "type": "string"
          },
          "pincode": {
            "minLength": 5,
            "maxLength": 6,
            "description": "The pin code of the Giftcard",
            "example": "123456",
            "type": "string"
          }
        }
      },
      "Order.PaymentMethod.Pin": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "terminalCode"
        ],
        "properties": {
          "terminalCode": {
            "pattern": "^(TH-[0-9]{4}-[0-9]{4})$",
            "description": "The terminal or TH code.",
            "example": "TH-1234-5678",
            "type": "string"
          },
          "terminalPin": {
            "description": "An additional pincode, if applicable (for example with Softpos terminals)",
            "example": "1234-5678-9012",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.PaymentMethod.DirectDebit": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "firstName",
          "lastName",
          "email",
          "city",
          "iban",
          "bic"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": true
          },
          "bic": {
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": true
          },
          "permissionGiven": {
            "type": "boolean"
          }
        }
      },
      "Order.PaymentMethod.Klarna": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "countryCode"
        ],
        "properties": {
          "countryCode": {
            "enum": [
              "AU",
              "AT",
              "BE",
              "CA",
              "CZ",
              "DK",
              "FI",
              "FR",
              "DE",
              "GR",
              "IE",
              "IT",
              "MX",
              "NL",
              "NZ",
              "NO",
              "PL",
              "PT",
              "RO",
              "ES",
              "SE",
              "CH",
              "GB",
              "US"
            ],
            "type": "string"
          }
        }
      },
      "Order.PaymentMethod.Przelewy24": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "Order.PaymentMethod.PayByBank": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "issuerId",
          "country"
        ],
        "properties": {
          "issuerId": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "debtorIban": {
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": "string",
            "nullable": true
          },
          "psuId": {
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        }
      },
      "Order.PaymentMethod.SprayPay": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "initials",
          "firstName",
          "lastName",
          "gender",
          "streetName",
          "houseNumber",
          "postalCode",
          "city",
          "country",
          "email",
          "phoneNumber"
        ],
        "properties": {
          "initials": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "gender": {
            "enum": [
              "FEMALE",
              "MALE"
            ],
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "houseNumber": {
            "type": "string"
          },
          "houseNumberAddition": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "enum": [
              "NL",
              "BE"
            ],
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "Order.PaymentMethod.PayPal": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "orderId"
        ],
        "properties": {
          "orderId": {
            "type": "string"
          }
        }
      },
      "Order.Input.Optimize.CollectorAccount.Iban": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "iban",
          "bic",
          "owner"
        ],
        "properties": {
          "iban": {
            "type": "string"
          },
          "bic": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          }
        }
      },
      "Order.Payment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "paymentMethod"
        ],
        "properties": {
          "paymentMethod": {
            "$ref": "#/components/schemas/Order.Input.PaymentMethod"
          }
        }
      },
      "ErrorOutput": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "type": {
            "default": "https://developer.pay.nl/docs/error-codes",
            "example": "https://developer.pay.nl/docs/error-codes",
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "violations": {
            "items": {
              "$ref": "#/components/schemas/ViolationOutput"
            },
            "type": "array"
          },
          "trace": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ViolationOutput": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "propertyPath": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request, see response body for more information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "BadRequest": {
                "summary": "Bad Request",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1400",
                  "title": "Bad request",
                  "detail": "The given input is malformed"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. Supplied credentials are invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "Unauthorized": {
                "summary": "Supplier credentials are invalid",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1401",
                  "title": "Authentication is needed to access this resource",
                  "detail": ""
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. Supplied credentials have no rights",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "Forbidden": {
                "summary": "Supplier credentials have no rights",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1403",
                  "title": "Access denied",
                  "detail": ""
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "NotFound": {
                "summary": "The requested resource is not found",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1404",
                  "title": "The requested resource is not found",
                  "detail": ""
                }
              }
            }
          }
        }
      },
      "MethodNotAllowed": {
        "description": "Used HTTP method is not allowed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "MethodNotAllowed": {
                "summary": "The used HTTP method is not allowed",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1405",
                  "title": "The request method is not supported by the target resource",
                  "detail": ""
                }
              }
            }
          }
        }
      },
      "NotAcceptable": {
        "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "NotAcceptable": {
                "summary": "The supplied content type in the accept parameter in the header is not supported",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1406",
                  "title": "There is no content that is acceptable by this server",
                  "detail": ""
                }
              }
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Rate limit reached.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "TooManyRequests": {
                "summary": "Rate limit reached.",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1429",
                  "title": "Too many requests",
                  "detail": "Rate limit reached, try again in 15 minutes."
                }
              }
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable Content. The request was well-formed but was unable to be followed due to semantic errors.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "UnprocessableEntity": {
                "summary": "The request was well-formed but was unable to be followed due to semantic errors.",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1422",
                  "title": "Unable to process the request",
                  "detail": "field: cannot be empty",
                  "violations": [
                    {
                      "propertyPath": "field",
                      "message": "cannot be empty"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Gone": {
        "description": "Indicates that this resource is no longer available for use",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "Gone": {
                "summary": "The requested resource is no longer available",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1410",
                  "title": "The requested resource is no longer available",
                  "detail": ""
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "An internal error occurred.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "InternalServerError": {
                "summary": "An internal error occurred.",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1500",
                  "title": "An internal error has occurred",
                  "detail": "Failed to process request due to X"
                }
              }
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "The server is currently unable to handle your request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorOutput"
            },
            "examples": {
              "InternalServerError": {
                "summary": "The server is currently unable to handle your request.",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "code": "PAY-1503",
                  "title": "The server is unable to handle your request, try again later.",
                  "detail": "The server is currently unable to handle your request, try again in 15 minuntes."
                }
              }
            }
          }
        }
      }
    },
    "parameters": {

    },
    "examples": {
      "OrderMinimum": {
        "summary": "Minimum order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Minimal Order",
          "reference": "REF1234",
          "amount": {
            "value": 1450
          }
        }
      },
      "OrderExtended": {
        "summary": "Extended order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Extended Order",
          "reference": "REF1234",
          "expire": "2025-04-18T09:48:37+02:00",
          "returnUrl": "https://your-return-url-here.com",
          "exchangeUrl": "https://your-exchange-url-here.com",
          "amount": {
            "value": 2350
          },
          "integration": {
            "test": false
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678"
          },
          "order": {
            "countryCode": "NL",
            "deliveryDate": "2025-04-24T09:48:37+02:00",
            "invoiceDate": "2025-05-18T09:48:37+02:00",
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "invoiceAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "products": [
              {
                "id": "ART1234",
                "description": "Article 1234",
                "type": "ARTICLE",
                "price": {
                  "value": 2350
                },
                "quantity": 1,
                "vatPercentage": 0
              }
            ]
          },
          "notification": {
            "type": "push",
            "recipient": "test@email.com"
          },
          "stats": {
            "tool": "tool",
            "info": "info",
            "object": "object",
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "domainId": "domain_id",
            "promotorId": 0
          },
          "transferData": {
            "transfer": "data"
          }
        }
      },
      "IdealIngOrder": {
        "summary": "iDEAL + ING Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "iDEAL + ING Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 10
          }
        }
      },
      "AccountFundingTransaction": {
        "summary": "Account Funding Transaction",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Account Funding Transaction",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 10
          },
          "customer": {
            "firstName": "John",
            "lastName": "Doe",
            "reference": "NL00RABO2098811624"
          }
        }
      },
      "IdealC2C": {
        "summary": "iDEAL C2C Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "iDEAL C2C",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 10
          },
          "optimize": {
            "collectorAccount": {
              "method": "iban",
              "iban": {
                "iban": "NL86BANKXXXXXXXXXX",
                "bic": "BANK",
                "owner": "J. Doe"
              }
            }
          }
        }
      },
      "IdealEnd2End": {
        "summary": "iDEAL end2end Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "iDEAL end2end",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 10
          },
          "optimize": {
            "collectorAccount": {
              "method": "iban",
              "iban": {
                "iban": "NL86BANKXXXXXXXXXX",
                "bic": "BANK",
                "owner": "Company BV"
              }
            },
            "collectorCompany": {
              "id": "12345",
              "name": "Company BV",
              "countryCode": "NL"
            }
          }
        }
      },
      "IdealFastCheckout": {
        "summary": "iDEAL Fast Checkout Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "iDEAL Fast Checkout",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 10
          },
          "optimize": {
            "flow": "fastCheckout",
            "shippingAddress": true,
            "billingAddress": true,
            "contactDetails": true
          }
        }
      },
      "VVVGiftcard": {
        "summary": "Direct VVV Giftcard Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Giftcard Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 1714,
            "input": {
              "cardNumber": "606436430000000",
              "pincode": "00000"
            }
          }
        }
      },
      "Pin": {
        "summary": "Direct Instore Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Pin Order",
          "reference": "REF1234",
          "amount": {
            "value": 3
          },
          "paymentMethod": {
            "id": 1927,
            "input": {
              "terminalCode": "TH-1234-1234"
            }
          }
        }
      },
      "DynamicCloudPos": {
        "summary": "Dynamic CloudPOS",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Pin Order",
          "reference": "REF1234",
          "amount": {
            "value": 3
          },
          "paymentMethod": {
            "id": 1927,
            "input": {
              "terminalCode": "TH-1234-1234",
              "terminalPin": "####-####-####"
            }
          }
        }
      },
      "StaticCloudPos": {
        "summary": "Static CloudPOS",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Pin Order",
          "reference": "REF1234",
          "amount": {
            "value": 3
          },
          "paymentMethod": {
            "id": 1927,
            "input": {
              "terminalCode": "TH-1234-1234"
            }
          }
        }
      },
      "DirectDebit": {
        "summary": "Direct DirectDebit Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Direct Debit Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 137,
            "input": {
              "email": "JohnDoe@pay.nl",
              "firstName": "John",
              "lastName": "Doe",
              "city": "Spijkenisse",
              "iban": "NL00INGB00000000",
              "bic": "INGBNL2A",
              "permissionGiven": true
            }
          }
        }
      },
      "PayPalExpressCheckout": {
        "summary": "PayPal Express Checkout Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "PayPal Express Checkout Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 138,
            "input": {
              "orderId": "paypal-order-id"
            }
          }
        }
      },
      "SprayPay": {
        "summary": "Direct SprayPay Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "SprayPay Order",
          "reference": "REF1234",
          "amount": {
            "value": 25000
          },
          "paymentMethod": {
            "id": 1987,
            "input": {
              "initials": "J",
              "firstName": "John",
              "lastName": "Doe",
              "gender": "MALE",
              "streetName": "Curieweg",
              "houseNumber": "19",
              "houseNumberAddition": "C",
              "postalCode": "3208 KJ",
              "city": "Spijkenisse",
              "country": "NL",
              "phoneNumber": "0600000000",
              "email": "johndoe@example.com"
            }
          }
        }
      },
      "Klarna": {
        "summary": "Direct Klarna Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Klarna Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 1717,
            "input": {
              "countryCode": "NL"
            }
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678"
          },
          "order": {
            "products": [
              {
                "id": "ART1234",
                "description": "Article 1234",
                "type": "ARTICLE",
                "price": {
                  "value": 2350
                },
                "quantity": 1,
                "vatPercentage": 0
              }
            ]
          }
        }
      },
      "KlarnaBusiness": {
        "summary": "Direct Klarna Order (Business)",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Klarna Business Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 1717,
            "input": {
              "countryCode": "NL"
            }
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678",
            "company": {
              "name": "Company.",
              "cocNumber": "00000000",
              "vatNumber": "NL000000000B01",
              "country": "NL"
            }
          },
          "order": {
            "products": [
              {
                "id": "ART1234",
                "description": "Article 1234",
                "type": "ARTICLE",
                "price": {
                  "value": 2350
                },
                "quantity": 1,
                "vatPercentage": 0
              }
            ]
          }
        }
      },
      "Riverty": {
        "summary": "Direct Riverty Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Riverty Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 2561
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678"
          },
          "order": {
            "invoiceAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "products": [
              {
                "id": "ART1234",
                "description": "Article 1234",
                "type": "ARTICLE",
                "price": {
                  "value": 2350
                },
                "quantity": 1,
                "vatPercentage": 0
              }
            ]
          }
        }
      },
      "RivertyBusiness": {
        "summary": "Direct Riverty Order (Business)",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Riverty Business Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 2561
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678",
            "company": {
              "name": "Company.",
              "cocNumber": "00000000",
              "vatNumber": "NL000000000B01",
              "country": "NL"
            }
          },
          "order": {
            "invoiceAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "products": [
              {
                "id": "ART1234",
                "description": "Article 1234",
                "type": "ARTICLE",
                "price": {
                  "value": 2350
                },
                "quantity": 1,
                "vatPercentage": 0
              }
            ]
          }
        }
      },
      "Billink": {
        "summary": "Direct Billink Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Billink Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 1672
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678"
          },
          "order": {
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "invoiceAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "products": [
              {
                "id": "ART1234",
                "description": "Article 1234",
                "type": "ARTICLE",
                "price": {
                  "value": 2350
                },
                "quantity": 1,
                "vatPercentage": 0
              }
            ]
          }
        }
      },
      "BillinkBusiness": {
        "summary": "Direct Billink Order (Business)",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Direct Billink Business Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 1672
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678",
            "company": {
              "name": "Company.",
              "cocNumber": "00000000",
              "vatNumber": "NL000000000B01",
              "country": "NL"
            }
          },
          "order": {
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "invoiceAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "products": [
              {
                "id": "ART1234",
                "description": "Article 1234",
                "type": "ARTICLE",
                "price": {
                  "value": 2350
                },
                "quantity": 1,
                "vatPercentage": 0
              }
            ]
          }
        }
      },
      "In3": {
        "summary": "Direct In3 Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "In3 Order",
          "reference": "REF1234",
          "amount": {
            "value": 5000
          },
          "paymentMethod": {
            "id": 1813
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678"
          },
          "order": {
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            }
          }
        }
      },
      "In3Business": {
        "summary": "Direct In3 Order (Business)",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Mondu Order",
          "reference": "REF1234",
          "amount": {
            "value": 25000
          },
          "paymentMethod": {
            "id": 3192
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678",
            "company": {
              "name": "Company.",
              "cocNumber": "00000000",
              "vatNumber": "NL000000000B01",
              "country": "NL"
            }
          },
          "order": {
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            }
          }
        }
      },
      "Notyd": {
        "summary": "Direct Notyd Order (Business only)",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Notyd Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 2931
          },
          "customer": {
            "email": "johndoe@example.com",
            "firstName": "John",
            "lastName": "Doe",
            "birthDate": "1999-11-22T00:00:00+01:00",
            "gender": "M",
            "phone": "0612345678",
            "company": {
              "name": "Company.",
              "cocNumber": "00000000",
              "vatNumber": "NL000000000B01",
              "country": "NL"
            }
          },
          "order": {
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "invoiceAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "street": "P.C. Hooftstraat",
              "streetNumber": "100",
              "streetNumberExtension": "A",
              "zipCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL"
            },
            "products": [
              {
                "id": "ART1234",
                "description": "Article 1234",
                "type": "ARTICLE",
                "price": {
                  "value": 2350
                },
                "quantity": 1,
                "vatPercentage": 0
              }
            ]
          }
        }
      },
      "Creditclick": {
        "summary": "Direct Creditclick Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Creditclick Order",
          "reference": "REF1234",
          "amount": {
            "value": 25000
          },
          "paymentMethod": {
            "id": 2107,
            "input": {
              "initials": "J",
              "firstName": "John",
              "lastName": "Doe",
              "gender": "MALE",
              "streetName": "P.C. Hooftstraat",
              "houseNumber": "100",
              "houseNumberAddition": "A",
              "postalCode": "3202XA",
              "city": "Amsterdam",
              "country": "NL",
              "phoneNumber": "0612345678"
            }
          }
        }
      },
      "P24": {
        "summary": "Direct Przelewy24 Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Przelewy24 Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 2151,
            "input": {
              "email": "JohnDoe@pay.nl"
            }
          }
        }
      },
      "PayByBank": {
        "summary": "Direct PayByBank Order",
        "value": {
          "serviceId": "SL-####-####",
          "description": "PayByBank Order",
          "reference": "REF1234",
          "amount": {
            "value": 2350
          },
          "paymentMethod": {
            "id": 2970,
            "input": {
              "issuerId": "ing",
              "country": "nl",
              "psuId": "psu",
              "debtorIban": "NL00INGB0000000"
            }
          }
        }
      },
      "TestCaseOne": {
        "summary": "Sandbox test case #1",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DESCRIPTION_1",
          "reference": "TESTREFERENCE1",
          "amount": {
            "value": 10101,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": 613
          },
          "integration": {
            "test": true
          }
        }
      },
      "TestCaseTwo": {
        "summary": "Sandbox test case #2",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DESCRIPTION_2",
          "reference": "TESTREFERENCE2",
          "amount": {
            "value": 20202,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": 613
          },
          "integration": {
            "test": true
          },
          "order": {
            "deliveryAddress": {
              "street": "TEST_DELIVERY_STREET",
              "streetNumber": "101",
              "streetNumberExtension": "a, first floor",
              "zipCode": "1122AB",
              "city": "TEST_DELIVERY_CITY",
              "country": "NL",
              "region": "TEST_DELIVERY_REGION"
            },
            "invoiceAddress": {
              "street": "TEST_INVOICE_STREET",
              "streetNumber": "202",
              "streetNumberExtension": "b, second floor",
              "zipCode": "2233",
              "city": "TEST_INVOICE_CITY",
              "country": "BE",
              "region": "TEST_INVOICE_REGION"
            }
          }
        }
      },
      "TestCaseThree": {
        "summary": "Sandbox test case #3",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DESCRIPTION_3",
          "reference": "TESTREFERENCE3",
          "amount": {
            "value": 30303,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": 613
          },
          "integration": {
            "test": true
          },
          "customer": {
            "company": {
              "name": "TEST_COMPANY_NAME",
              "cocNumber": "12345678",
              "vatNumber": "NL0123456789",
              "country": "NL"
            }
          }
        }
      },
      "TestCaseFour": {
        "summary": "Sandbox test case #4",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DESCRIPTION_4",
          "reference": "TESTREFERENCE4",
          "amount": {
            "value": 40404,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": 613
          },
          "integration": {
            "test": true
          },
          "order": {
            "invoiceAddress": {
              "zipCode": "1122",
              "country": "BE"
            }
          }
        }
      },
      "TestCaseFive": {
        "summary": "Sandbox test case #5",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DESCRIPTION_5",
          "reference": "TESTREFERENCE5",
          "amount": {
            "value": 50505,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": 613
          },
          "integration": {
            "test": true
          },
          "stats": {
            "object": "TEST_PARTNER_VALUE"
          }
        }
      },
      "TestCaseSix": {
        "summary": "Sandbox test case #6",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DESCRIPTION_6",
          "reference": "TESTREFERENCE6",
          "amount": {
            "value": 60606,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": 613
          },
          "integration": {
            "test": true
          },
          "stats": {
            "tool": "TEST_TOOL",
            "info": "TEST_INFO",
            "extra1": "TEST_CUSTOM_EXTRA1",
            "extra2": "TEST_CUSTOM_EXTRA2",
            "extra3": "TEST_CUSTOM_EXTRA3",
            "domainId": "TEST_DOMANID",
            "promotorId": 123456789
          }
        }
      },
      "TestCaseSeven": {
        "summary": "Sandbox test case #7",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DESCRIPTION_7",
          "reference": "TESTREFERENCE7",
          "amount": {
            "value": 70707,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": 613
          },
          "integration": {
            "test": true
          },
          "customer": {
            "gaClientId": "TEST_GA_CLIENT_ID"
          }
        }
      },
      "TestCaseEight": {
        "summary": "Sandbox test case #8",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DESCRIPTION_8",
          "reference": "TESTREFERENCE8",
          "amount": {
            "value": 80808,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": 613
          },
          "integration": {
            "test": true
          },
          "customer": {
            "email": "test-email@example.com",
            "trust": 7,
            "reference": "TEST_CUSTOMER_REFERENCE"
          }
        }
      },
      "TestCaseNine": {
        "summary": "Sandbox test case #9",
        "value": {
          "serviceId": "SL-####-####",
          "description": "TEST_DÉSCRÍPTÍON_9",
          "reference": "TESTREFERENCE9",
          "amount": {
            "value": 90909,
            "currency": "EUR"
          },
          "customer": {
            "firstName": "TEST_CUSTOMER_FÍRST_NÄMÊ",
            "lastName": "TEST_CUSTOMER_LÄST_NÄMÊ",
            "reference": "TEST_CUSTOMER_RÊFÊRÊNCÊ",
            "company": {
              "name": "TEST_COMPÄNY_NÂMÊ"
            }
          },
          "order": {
            "deliveryAddress": {
              "street": "TEST_DÊLÍVÊRY_STRÊÊT",
              "streetNumberExtension": "å, fīrst fløør",
              "city": "TEST_DÊLÍVÊRY_CÎTY",
              "region": "TEST_DÊLÍVÊRY_RĘGÍON"
            },
            "invoiceAddress": {
              "street": "TEST_ÍNVŒÍCÊ_STRÊÊT",
              "streetNumberExtension": "b, sêcõnd flòòr",
              "city": "TEST_ÍNVŒÍCÊ_CÍTY",
              "region": "TEST_ÍNVŒÍCÊ_RÊGÍÒN"
            },
            "products": [
              {
                "description": "TEST_PRØDŪCT_1_DĖSCRĮPTÏŌN",
                "type": "ARTICLE",
                "price": {
                  "value": 90909
                },
                "quantity": 1
              }
            ]
          },
          "stats": {
            "tool": "TEST_TŌŌL",
            "info": "TEST_ÍNFŌ",
            "object": "TEST_PÂRTNËR_VÆLÙĘ",
            "extra1": "TEST_CÙSTÕM_ÊXTRÄ1",
            "extra2": "TEST_CÙSTÕM_ÊXTRÄ2",
            "extra3": "TEST_CÙSTÕM_ÊXTRÄ3",
            "domainId": "TESTDŌMÄÍNÍD"
          },
          "transferData": {
            "test": "TEST_TRÀNSFÊR_DÂTÀ_ITĘM"
          }
        }
      },
      "OrderResponse201Created": {
        "summary": "Order created",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": 20,
            "action": "PENDING"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "checkoutData": null,
          "payments": [],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200Status": {
        "summary": "Pending Order",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": 50,
            "action": "PENDING"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "checkoutData": null,
          "payments": [
            {
              "id": "019642b8-9d82-78cf-83bd-ed07c4a73a0a",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": null,
              "customerKey": null,
              "customerId": null,
              "customerName": null,
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": 50,
                "action": "PENDING"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "supplierData": null
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200Approve": {
        "summary": "Approved order",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": 100,
            "action": "PAID"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 100,
            "currency": "EUR"
          },
          "checkoutData": null,
          "payments": [
            {
              "id": "019642b8-9d83-73ff-b751-2328fe83d2fa",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": null,
              "customerKey": null,
              "customerId": null,
              "customerName": null,
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": 100,
                "action": "PAID"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "supplierData": null
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200Decline": {
        "summary": "Declined order",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": -64,
            "action": "CANCEL"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "checkoutData": null,
          "payments": [
            {
              "id": "019642b8-9d83-73ff-b751-2328ff5ac6e5",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": null,
              "customerKey": null,
              "customerId": null,
              "customerName": null,
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": -64,
                "action": "CANCEL"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "supplierData": null
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200Capture": {
        "summary": "Captured order (with supplier and checkoutData)",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": 100,
            "action": "PAID"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 100,
            "currency": "EUR"
          },
          "checkoutData": null,
          "payments": [
            {
              "id": "019642b8-9d83-73ff-b751-2328ff98e102",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": null,
              "customerKey": null,
              "customerId": null,
              "customerName": null,
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": 100,
                "action": "PAID"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "supplierData": []
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200CapturedWithCheckoutData": {
        "summary": "Captured order (with supplier and checkoutData)",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": null,
          "reference": null,
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": 100,
            "action": "PAID"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 100,
            "currency": "EUR"
          },
          "checkoutData": {
            "customer": {
              "email": "JohnDoe@pay.nl",
              "firstName": "John",
              "lastName": "Doe",
              "dateOfBirth": "1999-11-22",
              "gender": "M",
              "phone": "+3161234567890",
              "locale": "nl_NL",
              "ipAddress": "0:0:0:0:0:0:0:1",
              "reference": "Cstmr12",
              "company": {
                "name": "Pay.",
                "cocNumber": "24283498",
                "vatNumber": "NL807960147B01",
                "country": "NL"
              }
            },
            "billingAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "streetName": "Curieweg",
              "streetNumber": "19",
              "streetNumberAddition": "C",
              "zipCode": "3208 KJ",
              "city": "Spijkenisse",
              "countryCode": "NL",
              "regionCode": "nl-ZH"
            },
            "shippingAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "streetName": "Curieweg",
              "streetNumber": "19",
              "streetNumberAddition": "C",
              "zipCode": "3208 KJ",
              "city": "Spijkenisse",
              "countryCode": "NL",
              "regionCode": "nl-ZH"
            }
          },
          "payments": [
            {
              "id": "019642b8-9d83-73ff-b751-2329001bc8c8",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": "iban",
              "customerKey": "aefdd1bea7e6f855b74ea7fbe19ba0a646789777",
              "customerId": "NL22INGB6512284550",
              "customerName": "John Doe",
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": 100,
                "action": "PAID"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "supplierData": {
                "contactDetails": {
                  "email": "JohnDoe@mail.nl",
                  "firstName": "John",
                  "lastName": "Doe",
                  "phoneNumber": "+3161234567890"
                },
                "invoiceAddress": {
                  "firstName": "John",
                  "lastName": "Doe",
                  "street": "Curieweg",
                  "houseNumber": "19",
                  "addition": "C",
                  "postalCode": "3208 KJ",
                  "city": "Spijkenisse",
                  "companyName": "Pay.",
                  "countryName": "Netherlands"
                },
                "shippingAddress": {
                  "firstName": "John",
                  "lastName": "Doe",
                  "street": "Curieweg",
                  "houseNumber": "19",
                  "addition": "C",
                  "postalCode": "3208 KJ",
                  "city": "Spijkenisse",
                  "companyName": "Pay.",
                  "countryName": "Netherlands"
                }
              }
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200CapturedWithCheckoutDataAfterUpdate": {
        "summary": "Captured order (with supplier and checkoutData)",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": 100,
            "action": "PAID"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 100,
            "currency": "EUR"
          },
          "checkoutData": {
            "customer": {
              "email": "JohnDoe@pay.nl",
              "firstName": "John",
              "lastName": "Doe",
              "dateOfBirth": "1999-11-22",
              "gender": "M",
              "phone": "+3161234567890",
              "locale": "nl_NL",
              "ipAddress": "0:0:0:0:0:0:0:1",
              "reference": "Cstmr12",
              "company": {
                "name": "Pay.",
                "cocNumber": "24283498",
                "vatNumber": "NL807960147B01",
                "country": "NL"
              }
            },
            "billingAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "streetName": "Curieweg",
              "streetNumber": "19",
              "streetNumberAddition": "C",
              "zipCode": "3208 KJ",
              "city": "Spijkenisse",
              "countryCode": "NL",
              "regionCode": "nl-ZH"
            },
            "shippingAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "streetName": "Curieweg",
              "streetNumber": "19",
              "streetNumberAddition": "C",
              "zipCode": "3208 KJ",
              "city": "Spijkenisse",
              "countryCode": "NL",
              "regionCode": "nl-ZH"
            }
          },
          "payments": [
            {
              "id": "019642b8-9d84-7877-97bd-02e2fb300251",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": "iban",
              "customerKey": "aefdd1bea7e6f855b74ea7fbe19ba0a646789777",
              "customerId": "NL22INGB6512284550",
              "customerName": "John Doe",
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": 100,
                "action": "PAID"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "supplierData": {
                "contactDetails": {
                  "email": "JohnDoe@mail.nl",
                  "firstName": "John",
                  "lastName": "Doe",
                  "phoneNumber": "+3161234567890"
                },
                "invoiceAddress": {
                  "firstName": "John",
                  "lastName": "Doe",
                  "street": "Curieweg",
                  "houseNumber": "19",
                  "addition": "C",
                  "postalCode": "3208 KJ",
                  "city": "Spijkenisse",
                  "companyName": "Pay.",
                  "countryName": "Netherlands"
                },
                "shippingAddress": {
                  "firstName": "John",
                  "lastName": "Doe",
                  "street": "Curieweg",
                  "houseNumber": "19",
                  "addition": "C",
                  "postalCode": "3208 KJ",
                  "city": "Spijkenisse",
                  "companyName": "Pay.",
                  "countryName": "Netherlands"
                }
              }
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200PartialCapture": {
        "summary": "Partially captured",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": 95,
            "action": "AUTHORIZE"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 45,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 55,
            "currency": "EUR"
          },
          "checkoutData": null,
          "payments": [
            {
              "id": "019642b8-9d84-7877-97bd-02e2fc186088",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": null,
              "customerKey": null,
              "customerId": null,
              "customerName": null,
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": 97,
                "action": "AUTHORIZE"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 45,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 55,
                "currency": "EUR"
              },
              "supplierData": []
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200Void": {
        "summary": "Voided order",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": -90,
            "action": "CANCEL"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "checkoutData": null,
          "payments": [
            {
              "id": "019642b8-9d84-7877-97bd-02e2fcce7e60",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": null,
              "customerKey": null,
              "customerId": null,
              "customerName": null,
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": -90,
                "action": "CANCEL"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "supplierData": null
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "OrderResponse200Abort": {
        "summary": "Aborted order",
        "value": {
          "id": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "type": "sale",
          "serviceId": "SL-####-####",
          "description": "Instore Terminal Order #27",
          "reference": "REF1234",
          "manualTransferCode": "0000 0000 0000 0000",
          "orderId": "0000",
          "uuid": "019642b8-9d82-78cf-83bd-ed07c40e3bad",
          "customerKey": null,
          "status": {
            "code": -90,
            "action": "CANCEL"
          },
          "receipt": null,
          "integration": {
            "pointOfInteraction": null,
            "test": false
          },
          "stats": {
            "extra1": "extra1",
            "extra2": "extra2",
            "extra3": "extra3",
            "tool": "tool",
            "info": "info",
            "object": "object",
            "promotorId": 0,
            "domainId": "WU-1234-5678"
          },
          "transferData": {
            "key": "value"
          },
          "amount": {
            "value": 100,
            "currency": "EUR"
          },
          "authorizedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "capturedAmount": {
            "value": 0,
            "currency": "EUR"
          },
          "checkoutData": null,
          "payments": [
            {
              "id": "019642b8-9d85-7ed1-9bec-07872f12fc49",
              "paymentMethod": {
                "id": 10,
                "input": null
              },
              "customerType": null,
              "customerKey": null,
              "customerId": null,
              "customerName": null,
              "ipAddress": "127.0.0.1",
              "secureStatus": true,
              "paymentVerificationMethod": 21,
              "status": {
                "code": -90,
                "action": "CANCEL"
              },
              "currencyAmount": {
                "value": 100,
                "currency": "EUR"
              },
              "amount": {
                "value": 100,
                "currency": "EUR"
              },
              "authorizedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "capturedAmount": {
                "value": 0,
                "currency": "EUR"
              },
              "supplierData": null
            }
          ],
          "createdAt": "2025-04-17T09:48:37+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": "2025-04-17T09:49:37+02:00",
          "modifiedBy": "TGU 123456",
          "expiresAt": "2025-04-17T10:03:37+02:00",
          "completedAt": null,
          "links": {
            "status": "\u003Cstatus_url\u003E",
            "abort": "\u003Cabort_url\u003E",
            "redirect": "\u003Credirect_url\u003E"
          }
        }
      },
      "CheckoutData": {
        "summary": "Checkout data",
        "value": {
          "customer": {
            "email": "JohnDoe@pay.nl",
            "firstName": "John",
            "lastName": "Doe",
            "dateOfBirth": "1999-11-22",
            "gender": "M",
            "phone": "+3161234567890",
            "locale": "nl_NL",
            "ipAddress": "0:0:0:0:0:0:0:1",
            "reference": "Cstmr12",
            "company": {
              "name": "Pay.",
              "cocNumber": "24283498",
              "vatNumber": "NL807960147B01",
              "country": "NL"
            }
          },
          "billingAddress": {
            "firstName": "John",
            "lastName": "Doe",
            "streetName": "Curieweg",
            "streetNumber": "19",
            "streetNumberAddition": "C",
            "zipCode": "3208 KJ",
            "city": "Spijkenisse",
            "countryCode": "NL",
            "regionCode": "nl-ZH"
          },
          "shippingAddress": {
            "firstName": "John",
            "lastName": "Doe",
            "streetName": "Curieweg",
            "streetNumber": "19",
            "streetNumberAddition": "C",
            "zipCode": "3208 KJ",
            "city": "Spijkenisse",
            "countryCode": "NL",
            "regionCode": "nl-ZH"
          }
        }
      },
      "GiftcardInput": {
        "summary": "A VVV Giftcard",
        "value": {
          "cardNumber": "6064363019XXXXXXX",
          "pincode": "123456"
        }
      },
      "PinInput": {
        "summary": "A Pin terminal",
        "value": {
          "terminalCode": "TH-1234-1234",
          "terminalPin": null
        }
      },
      "EcrInput": {
        "summary": "A Ecr terminal",
        "value": {
          "terminalCode": "TH-1234-1234",
          "terminalPin": "1234-1234-1234"
        }
      },
      "DirectDebitInput": {
        "summary": "A DirectDebit order",
        "value": {
          "firstName": "John",
          "lastName": "Doe",
          "email": "JohnDoe@pay.nl",
          "city": "Spijkenisse",
          "iban": "NLXXINGB123456789",
          "bic": "INGBNL2A",
          "permissionGiven": true
        }
      },
      "KlarnaInput": {
        "summary": "A Dutch Klarna Order",
        "value": {
          "countryCode": "NL"
        }
      },
      "PrzelewyInput": {
        "summary": "A Przelewy24 Order",
        "value": {
          "email": "JohnDoe@pay.nl"
        }
      },
      "PayByBankInput": {
        "summary": "A PayByBank order",
        "value": {
          "issuerId": "ING",
          "country": "NL",
          "debtorIban": "NLXXINGB123456789",
          "psuId": "1234"
        }
      },
      "SprayPayInput": {
        "summary": "A SprayPay order",
        "value": {
          "initials": "J",
          "firstName": "John",
          "lastName": "Doe",
          "gender": "M",
          "streetName": "Curieweg",
          "houseNumber": "19",
          "houseNumberAddition": "C",
          "postalCode": "32028 KJ",
          "city": "Spijkenisse",
          "country": "NL",
          "email": "JohnDoe@pay.nl",
          "phoneNumber": "061234567890"
        }
      },
      "PayPalInput": {
        "summary": "A PayPal order",
        "value": {
          "orderId": "PayPal-order-id"
        }
      },
      "order_payment_ideal": {
        "summary": "iDEAL payment",
        "value": {
          "paymentMethod": {
            "id": 10
          }
        }
      },
      "order_payment_giftcard": {
        "summary": "Giftcard payment",
        "value": {
          "paymentMethod": {
            "id": 3189,
            "input": {
              "cardNumber": "6064363019XXXXXXX",
              "pincode": "123456"
            }
          }
        }
      },
      "order_payment_pin": {
        "summary": "Pin payment",
        "value": {
          "paymentMethod": {
            "id": 1927,
            "input": {
              "terminalCode": "TH-1234-5678"
            }
          }
        }
      }
    },
    "requestBodies": {

    },
    "headers": {

    },
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "description": "",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "description": "Example: Bearer 12345xx6xxx1x2x123456789123xx123x12345x4",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "BasicAuth": []
    },
    {
      "BearerAuth": []
    }
  ],
  "tags": [],
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}